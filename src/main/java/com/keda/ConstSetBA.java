/* Generated by Together */

package com.keda;

import java.text.SimpleDateFormat;



/**
 *
 * <p>Title: </p>
 * <p>Description:
 * 命名规范：常量的命名需符合下面形式<br>
 * 系统选项字典：选项字段键值_值的语义，如<br>
 * public static final long PUB_YESNO_YES = 1;<br>
 * public static final long PUB_YESNO_NO = 0;<br>
 * 其他常量：限定词_语义。这种定义比较灵活，根据实际需要自行定义，但需要保证不能重复。<br></p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: EST</p>
 * @author Roger
 * @version 1.0
 */
public class ConstSetBA {
	
 	/**
     * 2018-06-06 pengwei
     * 入库单总单状态 
     */
	  public static final String FETCHSTATUS_INVALID = "0"; //作废
	  public static final String FETCHSTATUS_INPUT = "1"; //录入
	  public static final String FETCHSTATUS_FINISHED = "2"; //完成
	  public static final String FETCHSTATUS_RG="3"; 
	  public static final String FETCHSTATUS_CHECK="4"; 
	  public static final String FETCHSTATUS_RACK ="5"; 
	  
		/**
	     * 2018-06-14 pengwei
	     * 出库单总单状态 
	     */
		  public static final String SOSTATUS_INVALID = "0"; //作废
		  public static final String SOSTATUS_INPUT = "1"; //录入
		  public static final String SOSTATUS_FINISHED = "2"; //完成
		  public static final String SOSTATUS_RG="3"; 
		  public static final String SOSTATUS_CHECK="4"; 
		  public static final String SOSTATUS_RACK ="5"; 
	
	
	  //交易类型
	  static public final String TRANSTYPE_IN = "1"; //入库
      static public final String TRANSTYPE_OUT = "0"; //出库
	
	  //交易状态
	    static public final String TRANS_STATUS_INIT = "0"; //初始
	    static public final String TRANS_STATUS_UNDER = "1"; //进行
	    static public final String TRANS_STATUS_FINISHED = "2"; //完成
	    
	    /**
	     * 2018-06-20 pengwei
	     * 库存调整单状态 
	     */
	    public static final String ADJSTATUS_INIT="0"; 
		public static final String ADJSTATUS_FIHISHED ="1"; 
	
	
	    /**
	     * 2018-06-21 pengwei
	     * 库存顶层标志
	     */
	    public static final String STOCK_UNTOP="0"; 
		public static final String STOCK_TOP ="1"; 	
	
		
		public static final Integer LAYER_ADD =1; 	//加一
		public static final Integer LAYER_SUB =-1; 	//减一
		
		public static final Integer LAYER_NUMBER = 6; 	//货位最高层数

		//货位层数标志
		public static final String TOPFLAG_TRUE = "1"; 	   //顶层
		public static final String TOPFLAG_FALSE = "0"; 	//非顶层

	
		
		//间隔分钟数
		public static final Integer INTERVAL_MINUTE =1; 	//分钟

		//入库起点位置
		public static final String START_LOCNO = "入库起点货位";
		public static final String START_ZONENO = "入库起点货位";
		
		//出库库终点位置
		public static final String END_LOCNO = "出库终点货位";
		public static final String END_ZONENO = "出库终点货位";
		
		
		
	// 系统消息状态
	static public final short MSG_STATUS_CANCEL = 0; // 作废
	static public final short MSG_STATUS_INIT = 1; // 初始
	static public final short MSG_STATUS_EXECUTE = 2; // 执行
	static public final short MSG_STATUS_FINISH = 3; // 完成
	static public final short MSG_BROADCASTFLAG_PUBLIC = 1; // 广播
	static public final short MSG_BROADCASTFLAG_PRIVATE = 0; // 私有
	static public final short MSG_READFLAG_READ = 1; // 已读
	static public final short MSG_READFLAG_UNREAD = 0; // 未读
	static public final String SYS_MSG_SEQ = "SYS_MSG_SEQ"; // 系统消息序列号
    //在CheckDutyBA中用到的数据源名
    static public final String WMSCHECKDUTY_HELIXDB =
            "java:comp/env/jdbc/WmsDB";
    static public final long RGDTLSTATUS_INVALID = 0;
    static public final long RGDTLSTATUS_INITIAL = 1;
    static public final long RGDTLSTATUS_CONFIRMED = 2;
    static public final long RGDTLSTATUS_DECIDED = 3;
    static public final long RGDTLSTATUS_RACKCONFIRM = 4;
    static public final long RGDTLSTATUS_CANCELED = 5;

    static public final long RGSTATUS_INVALID = 0;
    static public final long RGSTATUS_INITIAL = 1;
    static public final long RGSTATUS_CONFIRMED = 2;


    
    public static final short PUB_YESNO_YES = 1;
	public static final short PUB_YESNO_NO = 0;

    static public final long TRANSSTATUS_INVALID = 0;
    static public final long TRANSSTATUS_INITIAL = 1;
    static public final long TRANSSTATUS_FINISHED = 2;

    static public final long PRINTFLAG_UNFINISH = 0; //未打印 add by qj 20080911
    static public final long PRINTFLAG_FINISHED = 1; //已打印

    static public final long PICKMODE_PTL = 1;
    static public final long PICKMODE_RF = 2;
    static public final long PICKMODE_WORKMAN = 3;
    static public final long RGSTATUS_CANCELED = 4;
    
    public static SimpleDateFormat SIMPLE_DATE_SHORT_FORMAT = new SimpleDateFormat(
    "yyyyMMdd");
	
    public static final String WMS_COLDCHAINDOC_SEQ = "WMS_COLDCHAINDOC_SEQ";
    public static final String EBMS_COMPANYCERT_SEQ="EBMS_COMPANYCERT_SEQ";
    public static final String WMS_COMPANYCERT_SEQ="WMS_COMPANYCERT_SEQ";
    public static final String WMS_COMPANY_SEQ="WMS_COMPANY_SEQ";
    public static final String WMS_FETCHDTLERROR_SEQ="WMS_FETCHDTLERROR_SEQ";
    public static final String WMS_FETCHDTL_NO_SEQ = "WMS_FETCHDTL_NO_SEQ";
    static public final long ORGFLAG_SCATTER = 0; //散件
    static public final long ORGFLAG_ORG = 1; //原件
    static public final long ORGFLAG_ANY = 2; //不区分

    static public final long TRUEFLAG_TRUE = 1;
    static public final long TRUEFLAG_FALSE = 0;

    static public final long QUALITYSTATUS_QUALIFIED = 0; //合格
    static public final long QUALITYSTATUS_NOTQUALIFIED = 1; //不合格
    static public final long QUALITYSTATUS_WAITINGREQC = 2; //待复检 add by tjs on 20080215
    static public final long QUALITYSTATUS_SHORT = 3; //短少   add by tjs on 20080215

    static public final long ZONETYPE_NORMAL = 1;
    static public final long ZONETYPE_TOBEQUALIFIED = 2;
    static public final long ZONETYPE_PREPARED = 3;
    static public final long ZONETYPE_NOTQUALIFIED = 4;
    static public final long ZONETYPE_SALESBACK = 5;

    static public final long RACKBYUNIT_FULLPALLET = 1; //整板
    static public final long RACKBYUNIT_FULLCASE = 2; //整箱不整板
    static public final long RACKBYUNIT_ODD = 3; //散件

    static public final float FULLPALLET_RATIO = (float) 0.5;
    //库存交易作业类型//lmx

    static public final long STORETASKTYPE_INITIAL = 0; //初始化
    static public final long STORETASKTYPE_SO = 1; //订单
    static public final long STORETASKTYPE_RACK = 2; //上架
    static public final long STORETASKTYPE_PATCH = 3; //补货
    static public final long STORETASKTYPE_ADJ = 4; //库内调整
    static public final long STORETASKTYPE_RG = 5; //收货
    static public final long STORETASKTYPE_PICK = 6; //拣选
    static public final long STORETASKTYPE_OFLS = 7; //报损报溢

    //订单类型//lmx
    static public final long SOTYPE_SALE = 1; //销售
    static public final long SOTYPE_SUBACK = 2; //进退
    static public final long SOTYPE_LEND = 3; //借货出库
    static public final long SOTYPE_PRESENT = 4; //赠品出库
    static public final long SOTYPE_MV = 5; //移库出库
    static public final long SOTYPE_LS = 6; //报溢出库
    static public final long SOTYPE_BACK = 7; //还货出库
    static public final long SOTYPE_OTHERCONSIGNOR_OUT = 8; //其他货主出库
    static public final long SOTYPE_PURCHANGE = 9; //采换
    static public final long SOTYPE_SALCHANGE = 10; //销换
    static public final long SOTYPE_OTHER = 99; //其他
//priority
    //批号要求//lmx
    static public final long LOTREQ_ONE = 1; //1个
    static public final long LOTREQ_TWO = 2; //2个
    static public final long LOTREQ_MORE = 3; //不限制

    //紧急程度//lmx
    static public final long URGENTFLAG_NORMAL = 0; //正常
    static public final long URGENTFLAG_YES = 1; //加急
    static public final long URGENTFLAG_MAX = 2; //紧急

    //订单取消原则//lmx
    static public final long CANCELTYPE_CANCELSO = 1; //取消整个订单
    static public final long CANCELTYPE_CANCELSODTL = 2; //取消该细单
    static public final long CANCELTYPE_ALLOCATEMAX = 3; //尽量满足

    //配货失败原因//lmx
    static public final long FAILREASON_NOORGSTOCK = 1; //符合订单条件的总库存不够(原件库存不够配)
    static public final long FAILREASON_NODISSTOCK = 2; //符合订单条件的总库存不够(原件库存已配,散件库存不够配)
    static public final long FAILREASON_NOORGREQSTOCK = 3; //符合订单条件的总库存够(原件库存不满足订单批号要求)
    static public final long FAILREASON_NODISREQSTOCK = 4; //符合订单条件的总库存够(原件库存已配,散件库存不满足订单批号要求)
    static public final long FAILREASON_OTHERDEL = 5; //其他细单不够导致本单删除
    static public final long FAILREASON_MAXALLOCATE = 6; //库存不够，尽量配货

    static public final long FAILREASON_NEEDPATCH = 7; //散件不够，需补货
    static public final long FAILREASON_MUSTRACK = 8; //待验区有货需上架或者有待定保管帐库存(G02未调整)
    static public final long FAILREASON_PATCHING = 9; //有库存补货决策后被锁(补货过程中，未拣选或者未上架)
    static public final long FAILREASON_ORGPATCHING = 41; //原件不够配，有原件补货任务，库存补货决策后被锁

    static public final long FAILREASON_MANHALT = 10; //人工挂起

    static public final long FAILREASON_NOORGSTOCK_VALIDOUT = 11;
    //符合订单条件的总库存不够(原件库存不够配)(有效期要求以外的库存)
    static public final long FAILREASON_NOORGSTOCK_GOODSDTL = 12;
    //符合订单条件的总库存不够(原件库存不够配)(有其他goodsdtlid库存)
    static public final long FAILREASON_NOORGSTOCK_STORAGE = 13;
    //符合订单条件的总库存不够(原件库存不够配)(有其他保管帐和使用状态库存)
    static public final long FAILREASON_NOORGSTOCK_NOFULLCASE = 14;
    //符合订单条件的总库存不够(原件库存不够配)(有非完整包装库存)
    static public final long FAILREASON_NODISSTOCK_VALIDOUT = 21;
    //符合订单条件的总库存不够(原件库存已配,散件库存不够配,且无原件可补货)(有效期要求以外的库存)
    static public final long FAILREASON_NODISSTOCK_GOODSDTL = 22;
    //符合订单条件的总库存不够(原件库存已配,散件库存不够配,且无原件可补货)(有其他goodsdtlid库存)
    static public final long FAILREASON_NODISSTOCK_STORAGE = 23;
    //符合订单条件的总库存不够(原件库存已配,散件库存不够配,且无原件可补货)(有其他保管帐和使用状态库存)
    static public final long FAILREASON_DPNEEDPATCH = 31; //单品管理,取原件库存,需要补货
    static public final long FAILREASON_AUTOHALT = 41; //外挂仓出库业务，系统自动挂起
//路单状态//lmx
    public static final long ROADSTATUS_INITIAL = 1; //初始
    public static final long ROADSTATUS_RELEASE = 2; //已释放
    public static final long ROADSTATUS_FINISHED = 3; //已完成
    public static final long ROADSTATUS_INVALID = 0; //作废
    public static final long ROADSTATUS_UP = 4; //挂起
    public static final long ROADSTATUS_CLEARDHA = 5; //已清DHA

//路单的运输控制状态
    public static final long TMSCONTROL_INIT = 0; //初始
    public static final long TMSCONTROL_TASKATTEMPER = 1; //生成送货单
    public static final long TMSCONTROL_ARRTRUCKATTEMPER = 2; //派车调度
    public static final long TMSCONTROL_CLEARDHA = 3; //清空DHA

//运输费用单状态
    public static final long FEESTATUS_INITIAL = 1; //准备
    public static final long FEESTATUS_FINISH = 2; //等待
//拣选单运行状态//lmx
    public static final long EXECSTATUS_INITIAL = 1; //准备
    public static final long EXECSTATUS_WAITING = 2; //等待
    public static final long EXECSTATUS_PICKING = 3; //拣选
    public static final long EXECSTATUS_FINISH = 4; //完成
    public static final long EXECSTATUS_ERROR = 5; //错误
//拣选细单状态//lmx
    public static final long PICKDTLSTATUS_INVALID = 0; //作废
    public static final long PICKDTLSTATUS_INITIAL = 1; //初始
    public static final long PICKDTLSTATUS_PICKING = 2; //拣选
    public static final long PICKDTLSTATUS_CONFIRM = 3; //确认
    public static final long PICKDTLSTATUS_CHECK = 4; //复核
    public static final long PICKDTLSTATUS_PRELOAD = 5; //备货完工
//拣选总单状态//lmx
    public static final long PICKSTATUS_INVALID = 0; //作废
    public static final long PICKSTATUS_INITIAL = 1; //初始
    public static final long PICKSTATUS_PICKING = 2; //拣选
    public static final long PICKSTATUS_CONFIRM = 3; //确认
    public static final long PICKSTATUS_CHECK = 4; //复核
    public static final long PICKSTATUS_PRELOAD = 5; //备货完工

    public static final long PICKTYPE_ORG = 1; //原件
    public static final long PICKTYPE_SCATTER = 2; //散件
    public static final long PICKTYPE_PTLCHECKSTOCK = 3; //PTL盘点

    public static final long PICKSOURCE_SO = 1; //订单
    public static final long PICKSOURCE_PATCH = 2; //补货
    public static final long PICKSOURCE_PTLCHECK = 3; //PTL盘点
//库内周转箱状态//lmx
    public static final long TOTESTAUS_USE = 1; //使用
    public static final long TOTESTAUS_UNUSE = 0; //空闲

    static public final long YESNO_TIP = 2;
    static public final long YESNO_YES = 1;
    static public final long YESNO_NO = 0;

    static public final long RACKSTATUS_INVALID = 0;
    static public final long RACKSTATUS_INITIAL = 1;
    static public final long RACKSTATUS_WAITING = 2;
    static public final long RACKSTATUS_FINISHED = 3;

    static public final long FINISHFLAG_INITIAL = 0;//未完成
    static public final long FINISHFLAG_FINISHED = 1;//完成


    static public final long RACKSOURCE_RECEIVE = 1; //收货
    static public final long RACKSOURCE_PATCH = 2; //补货         //lmx 修改

    static public final long RGTYPE_PURCHASE = 1; //采购			//kun进货入库
    static public final long RGTYPE_SALESBACK = 2; //销退			//kun销退入库
    static public final long RGTYPE_BORROWIN = 3; //借入			//kun借货入库
    static public final long RGTYPE_PRESENT = 4; //赠品入库			//kun赠品入库
    static public final long RGTYPE_MOVEIN = 5; //移入				//kun移库入库
    static public final long RGTYPE_OVERFLOW = 6; //报损			//kun报溢入库
    static public final long RGTYPE_RETURNIN = 7; //还入			//kun还货入库
    static public final long RGTYPE_CHANGE = 8; //换货入库			//MGP换货入库
    static public final long RGTYPE_SCM = 9; //供应链			//MGP供应链
    static public final long RGTYPE_SALESCHANGE = 10; //销售换货
    static public final long RGTYPE_OTHER = 99; //其它

    //KUN RGDTL收货细单去向
    static public final long REWARDS_STOCK = 1; //1进货
    static public final long REWARDS_SALESBACK = 2; //2销退
    static public final long REWARDS_AGENCYSALE = 3; //3代销
    static public final long REWARDS_PRESENT = 4; //4赠品
    static public final long REWARDS_MOVEIN = 5; //5移入
    static public final long REWARDS_PRODUCT = 6; //6生产
    static public final long REWARDS_AGENCYSTOCK = 7; //7代管

    static public final long LABELSTATUS_CANCEL = 0; //作废
    static public final long LABELSTATUS_INITIAL = 1;
    static public final long LABELSTATUS_PICKED = 2;
    static public final long LABELSTATUS_FINISHED = 3;

    static public final long LABELTYPE_CASEOUT = 1; //原件出库
    static public final long LABELTYPE_DISOUT = 2; //散件出库
    static public final long LABELTYPE_RACK = 3; //上架标签
    static public final long LABELTYPE_PATCH = 4; //补货标签
    static public final long LABELTYPE_LOC = 5; //货位标签
    static public final long LABELTYPE_TOTE = 6; //料箱标签

    static public final long QUALITYLEVEL_RACKPERIOD = 0;
    static public final long QUALITYLEVEL_NEARINVALIDDATE = 1;
    static public final long QUALITYLEVEL_INVALIDDATE = 2;

    static public final long RG_QCRULE_FALSE = 0; //不QC
    static public final long RG_QCRULE_RG = 1; //按收货总单QC
    static public final long RG_QCRULE_SKU = 2; //按SKU QC

    static public final long RG_QCSTATUS_UNFINISH = 0; //已品检
    static public final long RG_QCSTATUS_FINISH = 1; //未品检

    static public final long RGDTL_QCSTATUS_UNFINISH = 0; //已品检
    static public final long RGDTL_QCSTATUS_FINISH = 1; //未品检

    static public final long WAVESTATUS_INITIAL = 1;
    static public final long WAVESTATUS_FINISHED = 2;

    //sequences
    static public final String WMS_RACK_SEQ = "WMS_RACK_SEQ";
    static public final String WMS_PALLET_SEQ = "WMS_PALLET_SEQ";
    static public final String WMS_STORETRANS_SEQ = "WMS_STORETRANS_SEQ";
    static public final String WMS_LABELLIST_SEQ = "WMS_LABELLIST_SEQ";
    static public final String WMS_STOCK_SEQ = "WMS_STOCK_SEQ";
    static public final String WMS_RELEASEWAVE_SEQ = "WMS_RELEASEWAVE_SEQ";
    static public final String WMS_PICK_SEQ = "WMS_PICK_SEQ";
    static public final String WMS_PICKDTL_SEQ = "WMS_PICKDTL_SEQ";
    static public final String WMS_TOTEIODOC_SEQ = "WMS_TOTEIODOC_SEQ";
    static public final String WMS_TOTE_SEQ = "WMS_TOTE_SEQ"; //add booby 2010-02-22
    static public final String WMS_TOTE_TOTENO_SEQ = "WMS_TOTE_TOTENO_SEQ"; //add booby 2010-02-22
    static public final String WMS_CHECKSTOCK_SEQ = "WMS_CHECKSTOCK_SEQ";
    static public final String WMS_CHECKSTOCK_NO_SEQ = "WMS_CHECKSTOCK_NO_SEQ";
    static public final String WMS_CHECKSTOCKDTL_SEQ = "WMS_CHECKSTOCKDTL_SEQ";
//    static public final String WMS_CHECKSTOCK_CHECKNO_SEQ =
//            "WMS_CHECKSTOCK_CHECKNO_SEQ";
    static public final String WMS_WORKING_SEQ = "WMS_WORKING_SEQ";
    static public final String WMS_WORKINGDTL_SEQ = "WMS_WORKINGDTL_SEQ";
    static public final String WMS_WORKLOAD_SEQ = "WMS_WORKLOAD_SEQ"; //add hmj 2010-03-23
    static public final String WMS_OUTLABEL_NO = "WMS_OUTLABEL_NO";
    static public final String WMS_TOTESTOCK_SEQ = "WMS_TOTESTOCK_SEQ";
    static public final String WMS_PATCH_SEQ = "WMS_PATCH_SEQ";
    static public final String WMS_PATCHDTL_SEQ = "WMS_PATCHDTL_SEQ";
    static public final String WMS_ADJ_SEQ = "WMS_ADJ_SEQ";
    static public final String WMS_ADJDTL_SEQ = "WMS_ADJDTL_SEQ";
    static public final String WMS_LABEL_NO = "WMS_LABEL_NO";
    static public final String WMS_ALLOCATEWAVE_SEQ = "WMS_ALLOCATEWAVE_SEQ";
    static public final String WMS_RG_SEQ = "WMS_RG_SEQ";
    static public final String WMS_RGDTL_SEQ = "WMS_RGDTL_SEQ";
    static public final String WMS_PRERG_SEQ = "WMS_PRERG_SEQ";
    static public final String WMS_PRERGDTL_SEQ = "WMS_PRERGDTL_SEQ";
    static public final String WMS_PRERG_NO_SEQ = "WMS_PRERG_NO_SEQ";
    static public final String WMS_QC_SEQ = "WMS_QC_SEQ";
    static public final String TMS_FEE_SEQ = "TMS_FEE_SEQ";
    static public final String WMS_FLOW_SEQ = "WMS_FLOW_SEQ";
    static public final String LMS_OPVALUEID_SEQ = "LMS_OPVALUEID_SEQ";
    static public final String WMS_SAFEQTYREPORT_SEQ = "WMS_SAFEQTYREPORT_SEQ";
    static public final String WMS_SAFEQTYREPORTDTL_SEQ =
            "WMS_SAFEQTYREPORTDTL_SEQ";
    static public final String WMS_SKU_SEQ = "WMS_SKU_SEQ";
    static public final String WMS_RACK_LABEL_NO_SEQ = "WMS_RACK_LABEL_NO_SEQ";
    static public final String WMS_RACK_PRINT_NO_SEQ = "WMS_RACK_PRINT_NO_SEQ";

    static public final String EBMS_PUR_SEQ = "EBMS_PUR_SEQ"; //进货单主健系列号 add by booby
    static public final String EBMS_PURNO_SEQ = "EBMS_PURNO_SEQ"; //进货总单编码系列号
    static public final String EBMS_PURDTL_SEQ = "EBMS_PURDTL_SEQ"; //进货细单主健系列号
    static public final String EBMS_PURDTLNO_SEQ = "EBMS_PURDTLNO_SEQ"; //进货细单编码系列号

    static public final String WMS_MOVE_PRINT_NO = "WMS_MOVE_PRINT_NO"; //add by qj 20080905 移库入库单打印号

    static public final String WMS_RACK_MISSIONID_SEQ =
            "WMS_RACK_MISSIONID_SEQ"; // add by tjs on 20080606 打印任务ID序号
    static public final String TMS_DISPATCH_DISPATCHNO_SEQ =
            "TMS_DISPATCH_DISPATCHNO_SEQ"; // add by tjs on 20080820 装车单打印条码

    static public final String TMS_SIGNFOR_NO_SEQ = "TMS_SIGNFOR_NO_SEQ";

    public static final String WMS_OFLS_SEQ = "WMS_OFLS_SEQ";

    public static final String WMS_CONVEYSTAT_SEQ = "WMS_CONVEYSTAT_SEQ";
    

    public static final String TMS_DISPATCH_SEQ = "TMS_DISPATCH_SEQ";
    public static final String TMS_DISPATCHDTL_SEQ = "TMS_DISPATCHDTL_SEQ";
    /*装车单流水号*/
    public static final String TMS_DISPATCHSEQ_SEQ = "TMS_DISPATCHSEQ_SEQ";
    public static final String TMS_SIGNFOR_SEQ = "TMS_SIGNFOR_SEQ";
    
    //po add
    public static final String LMS_ACCOUNT_CONSIGNOR_SEQ = "LMS_ACCOUNT_CONSIGNOR_SEQ";
    
    //jwz add
    public static final String WMS_FETCH_SEQ = "WMS_FETCH_SEQ";
    public static final String WMS_FETCHDTL_SEQ = "WMS_FETCHDTL_SEQ";

    //lwk 收货导出接口SEQ
    public static final String EDIS_RGDTL_SEQ = "EDIS_RGDTL_SEQ";
    public static final String EDIS_FETCHOUT_SEQ = "EDIS_FETCHOUT_SEQ";

    public static final String WMS_ACTIONDEF_SEQ = "WMS_ACTIONDEF_SEQ";
    public static final String WMS_SUBJECT_SEQ = "WMS_SUBJECT_SEQ";
    public static final String WMS_SUBJECTDTL_SEQ = "WMS_SUBJECTDTL_SEQ";
    public static final String WMS_ACTIONCOST_SEQ = "WMS_ACTIONCOST_SEQ";
    public static final String WMS_FEE_SEQ = "WMS_FEE_SEQ";
    public static final String WMS_FEEDTL_SEQ = "WMS_FEEDTL_SEQ";
    
    public static final String EDIS_PO_CFM_SEQ = "EDIS_PO_CFM_SEQ";

    public static final String PUB_LOTSORNO_SEQ = "PUB_LOTSORNO_SEQ";//lhl20111005  批号序号
    
    public static final String WMS_CONFIRMDOCSAL_SEQ = "WMS_CONFIRMDOCSAL_SEQ";//SH20120417  系统点单销售流水号
    public static final String WMS_CONFIRMDOCINV_SEQ = "WMS_CONFIRMDOCINV_SEQ";//SH20120417  系统点单发票流水号
    static public final String WMS_COLDCHAIN_NO_SEQ = "WMS_COLDCHAIN_NO_SEQ";
    static public final long RACK_MISSIONTYPE_AUTO = 1; // add by tjs on 20080606 打印任务类型：1，自动生成
    static public final long RACK_MISSIONTYPE_MANUAL = 2; // add by tjs on 20080606 打印任务类型：2，手工生成

    static public final long ADJSTATUS_INVALID = 0;
    static public final long ADJSTATUS_INITIAL = 1;
    static public final long ADJSTATUS_FINISHED = 2;

    static public final long ADJDTLSTATUS_INVALID = 0;
    static public final long ADJDTLSTATUS_INITIAL = 1;
    static public final long ADJDTLSTATUS_FINISHED = 2;

    static public final long CONTYPE_PALLET = 1;
    static public final long CONTYPE_TOTE = 2;
    static public final long CONTYPE_PAPERCASE = 3;
    static public final long CONTYPE_OUTTOTE = 4;
//盘点颗粒度定义
    static public final long CHECKSTOCK_GRANULARITY_SKU = 1;
    static public final long CHECKSTOCK_GRANULARITY_LOC = 2;
    static public final long CHECKSTOCK_GRANULARITY_LOT = 3;
    static public final long CHECKSTOCK_GRANULARITY_PALLET = 4;
    static public final long CHECKSTOCK_GRANULARITY_DETAIL = 5;

    //周期盘点确认定义
    static public final long CHECKSTOCK_CIRCLE_CONFIRM = 1;
    static public final long CHECKSTOCK_CIRCLE_NOTCONFIRM = 0;

//静态盘点sql定义
    static public final String SQL_CHECKSTOCK_GRANULARITY_SKU =
            "CHECKSTOCK_SUMTO_SKU";
    static public final String SQL_CHECKSTOCK_GRANULARITY_LOC =
            "CHECKSTOCK_SUMTO_LOC";
    static public final String SQL_CHECKSTOCK_GRANULARITY_LOT =
            "CHECKSTOCK_SUMTO_LOT";
    static public final String SQL_CHECKSTOCK_GRANULARITY_PALLET =
            "CHECKSTOCK_SUMTO_PALLET";
    static public final String SQL_CHECKSTOCK_GRANULARITY_DETAIL =
            "CHECKSTOCK_SUMTO_DETAIL";

//动态盘点sql定义
    static public final String SQL_CHECKSTOCK_DYNAMIC_FINDSKUID =
            "CHECKSTOCK_DYNAMIC_FINDSKU";
    static public final String SQL_CHECKSTOCK_DYNAMIC_FIND_SKU =
            "CHKSTOCK_DYNAMIC_FIND_SKU";
    static public final String SQL_CHECKSTOCK_DYNAMIC_FIND_LOC =
            "CHKSTOCK_DYNAMIC_FIND_LOC";
    static public final String SQL_CHECKSTOCK_DYNAMIC_FIND_LOT =
            "CHKSTOCK_DYNAMIC_FIND_LOT";
    static public final String SQL_CHECKSTOCK_DYNAMIC_FIND_DETAIL =
            "CHKSTOCK_DYNAMIC_FIND_DETAIL";
    static public final String SQL_CHECKSTOCK_DYNAMIC_SUM =
            "CHECKSTOCK_DYNAMIC_SUM";
    static public final String SQL_CHECKSTOCK_DYNAMIC_SUMLOT =
            "CHECKSTOCK_DYNAMIC_SUM_LOT";
    static public final String SQL_CHECKSTOCK_DYNAMIC_SUMLOC =
            "CHECKSTOCK_DYNAMIC_SUM_LOC";
    static public final String SQL_CHECKSTOCK_DYNAMIC_SUMSKU =
            "CHECKSTOCK_DYNAMIC_SUM_SKU";
    static public final String SQL_CHECKSTOCK_DYNAMIC_SUMDETAIL =
            "CHECKSTOCK_DYNAMIC_SUM_DETAIL";
    static public final String SQL_CHECKSTOCK_DYNAMIC_FIND_ZERO =
            "CHKSTOCK_DYNAMIC_FIND_ZERO";

//周期循环盘点sql定义
    static public final String SQL_CHECKSTOCK_CIRCLE =
            "CHECKSTOCK_CIRCLE_SUM_DETAIL";

//RF盘点sql定义
    static public final String SQL_RF_CHECKSTOCK_IS_ZONE_CHECKED =
            "QueryRFCheckStockIsZoneChecked";
    static public final String SQL_RF_CHECKSTOCK_READ_CHECKDTL =
            "QueryRFCheckStockReadCheckdtl";

//检查盘点表录入的区域与货位是否匹配仓库
    static public final String SQL_CHECKSTOCK_CHK_ZONES_LOCS_MATCH_WAREHOUSE =
            "CHECKSTOCK_CHK_ZONES_LOCS_MATCH_WAREHOUSE";

//安全量警报报表寻找数据sql定义
    static public final String SQL_SAFEQTY_FIND =
            "SAFEQTY_FIND_GOODS";

//安全量警报报表计算货品库存sql定义
    static public final String SQL_SAFEQTY_GOODS_CAL_STOCK =
            "SAFEQTY_GOODS_CAL_STOCK";

//手动安全量警报报表计算货品库存sql定义
    static public final String SQL_SDSAFEQTY_GOODS_CAL_STOCK =
            "SDSAFEQTY_GOODS_CAL_STOCK";


//安全量警报报表根据货品及仓库计算库存中最大的SKU的sql定义 add by tjs on 20080704
    static public final String SQL_SAFEQTY_GOODS_WAR_GET_MAX_SKUID =
            "SAFEQTY_GOODS_WAR_GET_MAX_SKUID";

//安全量警报报表根据货品及仓库取SKU仓库策略中最大的SKU的sql定义 add by tjs on 20080822
    static public final String SQL_SAFEQTY_GOODS_WAR_GET_MAX_SKUID_BY_WAR =
            "SAFEQTY_GOODS_WAR_GET_MAX_SKUID_BY_WAR";

//安全量警报报表根据货品及仓库取SKU中最大的SKU的sql定义 add by tjs on 20080822
    static public final String SQL_SAFEQTY_GOODS_WAR_GET_MAX_SKUID_BY_SKU =
            "SAFEQTY_GOODS_WAR_GET_MAX_SKUID_BY_SKU";

//安全量警报报表根据货品及仓库计算库存中最大的SKU的sql定义 add by tjs on 20080704
    static public final String SQL_SAFEQTY_GOODS_CAL_CASE_STOCK =
            "SAFEQTY_GOODS_CAL_CASE_STOCK";

//安全量警报报表根据货品及仓库计算库存中最大的SKU的sql定义 add by QJ on 20080804
    static public final String SQL_SDSAFEQTY_GOODS_CAL_CASE_STOCK =
            "SDSAFEQTY_GOODS_CAL_CASE_STOCK";


//安全量警报报表增加黄金围仓库ID的常量 add by tjs on 20080704
    static public final long HJW_WAREHOUSEID = 1258201;

//销售细单状态 by wgg
    static public final long SODTLSTATUS_INITIAL = 1; //初始
    static public final long SODTLSTATUS_SUCCESS = 2; //配货成功
    static public final long SODTLSTATUS_FAIL = 3; //配货失败
    static public final long SODTLSTATUS_DELETE = 4; //删除
    static public final long SODTLSTATUS_PARTSUCCESS = 5; //部分成功
    static public final long SODTLSTATUS_INPUT = 7; //录入 update for jwz
    static public final long SODTLSTATUS_CHECKED = 8; //复核
    static public final long SODTLSTATUS_PRELOAD = 9; //备货完工
//销售总单状态 by wgg
//    static public final long SOSTATUS_INITIAL = 1; //初始
//    static public final long SOSTATUS_FINISHED = 2; //配货完成
//    static public final long SOSTATUS_OUTTRANATTEMPER = 21; //匹配线路失败
//    static public final long SOSTATUS_HALT = 3; //挂起
//    static public final long SOSTATUS_DELETE = 4; //删除
//    static public final long SOSTATUS_BUILD = 5; //生成路单
//    static public final long SOSTATUS_RELEASE = 6; //释放
//    static public final long SOSTATUS_INPUT = 7; //录入 update for jwz
//
//    static public final long SOSTATUS_CHECKED = 8; //复核
//    static public final long SOSTATUS_PRELOAD = 9; //备货完工
//    static public final long SOSTATUS_SENDOUT = 10; //发货


//销售单作业调度状态 by mgp
//  1、初始
//  2、匹配线路失败
//  3、挂起
//  4、生成路单
//  5、派车调度
//  6、发货
//  7、送货完工
    static public final long ATTEMPERSTATUS_INIT = 1; //初始
    static public final long ATTEMPERSTATUS_LINEFAIL = 2; //线路匹配失败
    static public final long ATTEMPERSTATUS_HALT = 3; //挂起
    static public final long ATTEMPERSTATUS_GENROAD = 4; //生成路单
    static public final long ATTEMPERSTATUS_DISATTMP = 5; //派车调度
    static public final long ATTEMPERSTATUS_SEND = 6; //发货
    static public final long ATTEMPERSTATUS_COMPLETE = 7; //送货完工
    static public final long ATTEMPERSTATUS_SENDFAIL = 8; //送货失败

    static public final long SKU_SKUMODE_SO_RG = 1; //单品管理模式：出入
    static public final long SKU_SKUMODE_SO = 2; //单品管理模式：出

    //单品颗粒度,1:基础单位,2：箱,3:板
    static public final long SKU_SKUGRANULE_UNIT = 1; //单品颗粒度：基础单位
    static public final long SKU_SKUGRANULE_CASE = 2; //单品颗粒度：箱
    static public final long SKU_SKUGRANULE_PALLET = 3; //单品颗粒度：板

    static public final long SKU_SKUBARCODEMODE_ORG = 1; //原来
    static public final long SKU_SKUBARCODEMODE_NEW = 2; //重新生成

    static public final String WMS_SKUADMIN_RGBARCODE =
            "WMS_SKUADMIN_RGBARCODE"; //单品管理：入库生成条码

    static public final long BILLSTATUS_INVALID = 0; //作废
    static public final long BILLSTATUS_INITIAL = 1; //初始
    static public final long BILLSTATUS_CONFIRMED = 2; //确认

    static public final long CHECKSTATUS_INVALID = 0; //作废
    static public final long CHECKSTATUS_INITIAL = 1; //初始
    static public final long CHECKSTATUS_CONFIRMED = 2; //确认
    static public final long CHECKSTATUS_LOCKED = 3; //锁定
    static public final long CHECKSTATUS_GENOFLS = 4; //生成损溢


    static public final long CHECKTYPE_STATIC = 1; //静盘
    static public final long CHECKTYPE_DYNAMIC = 2; //动盘
    static public final long CHECKTYPE_PTL = 3; //PTL盘点
    static public final long CHECKTYPE_RF = 4; //RF盘点
    static public final long CHECKTYPE_CIRCLE = 5; //周期循环盘点
    static public final long CHECKTYPE_DIFF = 6; //差异盘点
    static public final long CHECKTYPE_SINGLE = 7; //单品盘点

    static public final long LOCSTATUS_STOPUSING = 0; //停用
    static public final long LOCSTATUS_NORMAL = 1; //正常
    static public final long LOCSTATUS_STANDBY = 2; //备用

//外用周转箱出库单类型
    static public final long IOTYPE_OUT = 1; //出
    static public final long IOTYPE_IN = 2; //入

    static public final long IOSOURCE_PURCHASE = 1; //采购
    static public final long IOSOURCE_LS = 2; //报损
    static public final long IOSOURCE_OF = 3; //报溢
    static public final long IOSOURCE_BACK = 4; //返回
    static public final long IOSOURCE_SENDOUT = 5; //发出

//批次分配的最大线程数
    static public final int MAX_ALLOCATE_THREAD = 5;

//调整状态，板号
    static public final long GOODSSTATUS_ORGODD = 99;
    static public final long PALLETID_ORGODD = -1;

    static public final long GOODSSTATUSID_NOCFM = 0;//待定
    static public final long GOODSSTATUSID_NOR = 1;//正常，可销
    static public final long GOODSSTATUSID_STOP = 2;//不可销


//ba用到的query定义
    static public final String SQL_QUERYLOTSTOCKQTY = "QueryLotStockQty";
    static public final String SQL_QUERYBOXUPOPERATE_V =
            "QueryBoxUpOperateView";
    static public final String SQL_QUERYBOXUPOPERATE_V_RECORDCOUNT =
            "QueryBoxUpOperateViewRecordCount"; //得到查询结果数
//分配用到的query定义
    static public final String SQL_LOCKGOODSDTLIDSTOCK = "LockGoodsdtlidStock"; //根据goodsdtlid,货主，保管帐锁当前库存
    static public final String SQL_QUERYMAXALLOCATEWAVEID =
            "QueryMaxAllocateWaveid"; //查询最大波次号
    static public final String SQL_QUERYLOTALLOCATESTOCKINFO =
            "QueryLotAllocateStockInfo"; //查询当前批号可配库存信息
    static public final String SQL_QUERYLOTALLOCATESTOCKQTY =
            "QueryLotAllocateStockQty"; //查询当前批号可配库存数量
    static public final String SQL_QUERYGOODSDTLLOTSTOCK =
            "QueryGoodsdtlLotStock"; //查货品明细原、散件可配批号及库存
    static public final String SQL_QUERYGOODSDTLLOTPATCHSTOCK =
            "QueryGoodsdtlLotPatchStock"; //查货品明细补货可配批号及库存
    static public final String SQL_QUERYGOODSDTLSUMLOTSTOCK =
            "QueryGoodsdtlSumLotStock"; //查货品明细原散件合一起的原件可配批号及库存
    static public final String SQL_QUERYGOODSDTLOTHERSTOCK =
            "QueryGoodsdtlOtherStock"; //查货品明细非可配库存
    static public final String SQL_QUERYGOODSDTLPATCHSTOCK =
            "QueryGoodsdtlPatchStock"; //查货品明细补货决策未拣选库存
    static public final String SQL_QUERYSODTLOTHERSTOCK =
            "QuerySodtlOtherStock"; //查货品其他方面库存

//补货用到的query定义
    static public final String SQL_QUERYPATCHGOODSLOTSTOCK =
            "QueryPatchGoodsLotStock"; //查货品原件可补货批号及库存
    static public final String SQL_QUERYLOTPATCHSTOCKINFO =
            "QueryLotPatchStockInfo"; //查询当前批号可补货库存信息
    static public final String SQL_QUERYLOTPATCHSTOCKQTY =
            "QueryLotPatchStockQty"; //查询当前批号可补货库存数量
    static public final String SQL_QUERYDESSTORETRANSLOC =
            "QueryDestStoretransLoc"; //查询当前空货位
    static public final String SQL_QUERYDESTEMPTYLOC = "QueryDestEmptyLoc"; //查询当前空货位
    static public final String SQL_QUERYDESTFLASELOC = "QueryDestFlaseLoc"; //查询当前虚拟货位

//安全量补货用到的query定义
    //获取库存上限
    static public final String SQL_QUERYUPQTY = "QueryUpqty";
    //获取补货量 对无上限取此值
    static public final String SQL_QUERYPATCHQTY = "QueryPatchqty";
    //获取可补货散件区的商品库存
    static public final String SQL_QUERYCANPATCHZONEODDSTOCKQTY =
            "QueryCanPatchZoneOddStockQty";

    //获取可补货原件区的商品库存
    static public final String SQL_QUERYCANPATCHZONEORGSTOCKQTY =
            "QueryCanPatchZoneOrgStockQty";

    //获取未完成的补货单的商品数量
    static public final String SQL_QUERYPATCHIINGQTY = "QueryPatchingQty";

//备货完工接口用到的query定义
    //路单
    static public final String SQL_QUERYSOPRELOADROAD = "QuerySoPreLoadRoad";
    //未备货完工的路单下的拣货单
    static public final String SQL_QUERYSOPRELOADPICKDTL =
            "QuerySoPreLoadPickdtl";
    //未传送的备货完工路单
    static public final String SQL_QUERYSOLOADUNEXPORTROAD =
            "QuerySoPreLoadUnExportRoad";
    //未传送的备货完工的订单
    static public final String SQL_QUERYSOLOADUNEXPORTSO =
            "QuerySoPreLoadUnExportSo";
    //本次周转箱个数
    static public final String SQL_QUERYSOTOTECOUNT = "QuerySoToteCount";
    //客户处周转箱个数
    static public final String SQL_QUERYSOCUSTOMERTOTECOUNT =
            "QuerySoCustomerToteCount";

//G02接口库存调整用到的query定义
    static public final String SQL_QUERYSTOCKOFRGDTL = "QueryStockOfRgdtl";
    static public final String SQL_QUERYSTOCKOFRGDTLADJ =
            "QueryStockOfRgdtlAdj";
    static public final String SQL_QUERYORGSTOCKOFRGDTLADJ =
            "QueryOrgStockOfRgdtlAdj";
    static public final String SQL_QUERYODDSTOCKOFRGDTLADJ =
            "QueryOddStockOfRgdtlAdj";

//自动清空DHA功能用到的query定义
    static public final String SQL_QUERYAUTOCLEARDHALOADLOC =
            "QueryAutoClearDHALoadLoc";
    static public final String SQL_QUERYAUTOCLEARDHADELIVERYLOC =
            "QueryAutoClearDHADeliveryLoc";
    static public final String SQL_QUERYAUTOCLEARDHALOCROAD =
            "QueryAutoClearDHALocRoad";

//导出定义
    static public final long EXP_SODTLALLOCATE = 2; //配货
    static public final long EXP_STOCKADJ = 3; //库存调整
    static public final long EXP_LS = 4; //报损
    static public final long EXP_OF = 5; //报溢
    static public final long EXP_SOPRELOAD = 6; //备货完工导出
    static public final long EXP_LOT = 7; //批号导出接口
    static public final long EXP_RGPRELOAD = 8; //收货单导出
    static public final long EXP_FETCHPRELOAD = 9; //收货单导出
    static public final long EXP_DISPATCHOUT = 10; //装车单导出
    static public final long EXP_DELIVERYOUT = 11; //送货单导出
    static public final long EXP_SIGNFOROUT = 12; //签收单导出
    static public final long EXP_ROADDTL = 13; //路单导出
    static public final long EXP_RELEASEWAVE = 14; //释放导出
    //单位类型定义//kun 05.03.25
    static public final long COMPANYTYPE_CONSIGNOR = 1; //货主
    static public final long COMPANYTYPE_COMPANY = 2; //单位
    static public final long COMPANYTYPE_ADDRESS = 3; //地址
    static public final long COMPANYTYPE_WAREHOUSE = 4; //仓库
    static public final long COMPANYTYPE_CARRYING = 5; //承运商
    static public final long COMPANYTYPE_TAKEADDRESS = 6; //中转地址

//  static public final long COMPANYTYPE_SUPPLYPOS = 11; //供应商地址
//  static public final long COMPANYTYPE_PROVIDER = 12; //供应商
//  static public final long COMPANYTYPE_SOCOMPANY = 21; //客户地址
//  static public final long COMPANYTYPE_BALANCE = 22; //  结算客户
    //static public final long COMPANYTYPE_CARRYING = 31; //承运商
    //kun 05.03.25

    //补货细单状态

    static public final long PATCHDTLSTATUS_INVALID = 0; //失败
    static public final long PATCHDTLSTATUS_INITAL = 1; //初始
    static public final long PATCHDTLSTATUS_RELEASE = 2; //释放
    static public final long PATCHDTLSTATUS_PICKED = 3; //已拣选
    static public final long PATCHDTLSTATUS_FINISH = 4; //完成
    
    static public final long PATCHSTATUS_INVALID = 0; //失败
    static public final long PATCHSTATUS_INITAL = 1; //初始
    static public final long PATCHSTATUS_RELEASE = 2; //释放
    static public final long PATCHSTATUS_PICKED = 3; //已拣选
    static public final long PATCHSTATUS_FINISH = 4; //完成

    //补货单据原因

    static public final long PATCHTYPE_MANUAL = 1; //人工
    static public final long PATCHTYPE_SAFEPATCH = 2; //安全量补货
    static public final long PATCHTYPE_ORDERPATCH = 3; //订单补货

    //报损报溢类型
    static public final long OFLSTYPE_LS = 1; //报损
    static public final long OFLSTYPE_OF = 2; //报溢

    //报损报溢状态
    static public final long OFLSSTATUS_INVALID = 0; //作废
    static public final long OFLSSTATUS_INITIAL = 1; //初始
    static public final long OFLSSTATUS_CONFIRMED = 2; //确定

    //报溢原因
    static public final long OFLSREASONID_STOCKOF = 1; //盘点多出
    static public final long OFLSREASONID_ORTHER = 18; //其他原因
    static public final long OFLSREASONID_LOTADJ = 3; //批号调整

//=======
//=======
    static public final String SQL_QUERYWAVEPROGRESS = "QueryWaveProgress";
    static public final String SQL_QUERYWAVESOCOUNT = "QueryWaveSoCount";
    static public final String SQL_QUERYWAVELINECOUNT = "QueryWaveLineCount";
    static public final String SQL_QUERYWAVECOMPANYCOUNT =
            "QueryWaveCompanyCount";
    static public final String SQL_QUERYWAVEORGCASEQTY = "QueryWaveOrgCaseQty";
    static public final String SQL_QUERYWAVESCATTERCASEQTY =
            "QueryWaveScatterCaseQty";
    static public final String SQL_QUERYORGSTORETRANSOFSO =
            "QueryOrgStoretransOfSo";
    static public final String SQL_QUERYSCATTERSTORETRANSOFSO =
            "QueryScatterStoretransOfSo";
//    static public final String SQL_QUERYSCATTERSTORETRANSOFSO2 =
//            "QueryScatterStoretransOfSo2";
    static public final String SQL_QUERYOUTLABELQTYOFCOMPANYDHA =
            "QueryOutLabelQtyOfCompanyDha";
    static public final String SQL_QUERYORGOUTLABELQTYOFCOMPANYDHA =
            "QueryOrgOutLabelQtyOfCompanyDha";

    //query定义
    static public final String SQL_QUERYADJOPERPICKBYUNIT =
            "QueryAdjOperPickbyunit";
    static public final String SQL_PRELOAD_CASE_BYLANE =
            "QueryPreloadCaseByLane";
    static public final String SQL_PRELOAD_CASE_BYALLLANE = "QueryPreloadCase";
    static public final String SQL_PRELOAD_TOTALCASE_BYLANE =
            "QueryPreloadTotalCaseByLane";
    static public final String SQL_PRELOAD_TOTALCASE =
            "QueryPreloadTotalCase";
    static public final String SQL_PRELOAD_ORGCASE_BYDHA =
            "QueryPreloadOrgCaseByDHA";
    static public final String SQL_PRELOAD_DISTCASE_BYDHA =
            "QueryPreloadDistcaseByDHA";
    static public final String SQL_PRELOAD_IS_BELONGTOLANE =
            "QueryPreloadIsBelongToLane";
    static public final String SQL_PRELOAD_DHANO =
            "QueryPreloadDhano";
    static public final String SQL_PRELOAD_LABELSTATUS =
            "QueryPreloadLabelstatus";
    static public final String SQL_PRELOAD_LABELMEMOSTRING =
            "QueryPreloadLabelmemostring";


    //QUERY定义 BoxupoperateBA by kun
    static public final String SQL_BOXUPOPERATE_FIND_TOTESKU =
            "QueryToteSkuOfBoxupoperateBA";
    static public final String SQL_BOXUPOPERATE_QUERY_TOTESTOCKQTY =
            "QueryTotestockQTYOfBoxupoperateBA";
    static public final String SQL_BOXUPOPERATE_QUERY_DHANO =
            "QueryDHANOOfBoxupoperateBA";

    static public final String SQL_BOXUPOPERATE_QUERY_CONSIGNOR_AND_WARE =
            "QueryPickdtlConsignorAndWareOfBoxupoperateBA";

    static public final String SQL_RELEASE_WORKLOAD =
            "QueryReleaseWorkload";
    static public final String SQL_QUERY_SO_STATUS_ALLOCATE =
            "QuerySostatusAllocate";

    //订单自动分配（紧急任务除外）
    static public final String SQL_QUERYAUTONORSOALLOCATE =
            "QueryAutoNorSoAllocate";

    static public final String SQL_QUERY_CALC_STOCK_QTY =
            "QueryCalcStockQty";

    static public final String SQL_LOCK_TABLE_CALC_STOCK =
            "LockTableCalcStock";

    static public final String SQL_QUERYSOTOTALORGCASEQTY =
            "QuerySoTotalOrgCaseQty";

    //补货任务的查找可补货的列表
    static public final String SQL_GetPatchLotList =
            "QueryGetPatchLotList";

    static public final String SQL_STOCKADJ_CHECK_STOCK =
            "QueryStockadjStockQty";
    static public final String SQL_DELETESTOCK = "DeleteStock";

    //分箱时，大于多少箱出一个原件标签的参数名称
    static public final String P_WMS_RL_PALLETQTY = "WMS_RL_PALLETQTY";
    //jason 20110720 不使用此静态参数，改为读取参数表设置
    //static public final long AS_PALLET_QTY = 10;
    
    static public final long FULL_PALLET_QTY = 20;
    
    //static public final long PATCH_GENLABEL_QTY = 1;
    public static final String P_WMS_PATCH_PALLETQTY = "WMS_PATCH_PALLETQTY";

    static public final long ADJREASON_RG = 1; //调整单为收货类型
    static public final long ADJREASON_INMV = 2; //调整单为移库类型G03
    static public final long ADJREASON_ERATOSU = 4; //调整单为代管转进货G03
    static public final long ADJREASON_MOVELOC = 3; //调整单为移位类型
    /**
     * 工作统计的作业类型
     */
    /**
     * czl20081015
     */
    static public final long WORKTYPE_ORG_PICK = 0; //拣选(原)
    static public final long WORKTYPE_DIS_PICK = 1; //拣选(散)
    static public final long WORKTYPE_PACK = 2; //装箱
    static public final long WORKTYPE_REG_PICK = 3; //补货拣选
    static public final long WORKTYPE_REG_RACK = 4; //补货上架
    static public final long WORKTYPE_RACK = 5; //收货上架
    static public final long WORKTYPE_PRE_LOAD = 6; //备货完工
    static public final long WORKTYPE_MOVE_LOAD = 7; //移位 add by czl
    static public final String SQL_WORKLOAD_CALC_ORG_PICK =
            "QueryWorkLoadCalcOrgPick";
    static public final String SQL_WORKLOAD_CALC_DIS_PICK =
            "QueryWorkLoadCalcDisPick";
    static public final String SQL_WORKLOAD_CALC_PACK =
            "QueryWorkLoadCalcPack";
    static public final String SQL_WORKLOAD_CALC_REG_PICK =
            "QueryWorkLoadCalcRepPick";
    static public final String SQL_WORKLOAD_CALC_REG_RACK =
            "QueryWorkLoadCalcRepRack";
    static public final String SQL_WORKLOAD_CALC_RACK =
            "QueryWorkLoadCalcRack";
    static public final String SQL_WORKLOAD_CALC_PRE_LOAD =
            "QueryWorkLoadCalcPreLoad";
    //add by czl 20081015
    static public final String SQL_WORKLOAD_CALC_MOVE_LOAD =
            "QueryWorkLoadCalcMoveLoad";
    /**
     * 工作量统计按岗位生成
     */
    /**
     * czl 20081015 update
     */
    static public final String SQL_WORKLOAD_CALC_ORG_PICK_DUTY =
            "QueryWorkLoadCalcOrgPickDuty";
    static public final String SQL_WORKLOAD_CALC_DIS_PICK_DUTY =
            "QueryWorkLoadCalcDisPickDuty";
    static public final String SQL_WORKLOAD_CALC_PACK_DUTY =
            "QueryWorkLoadCalcPackDuty";
    static public final String SQL_WORKLOAD_CALC_REG_PICK_DUTY =
            "QueryWorkLoadCalcRepPickDuty";
    static public final String SQL_WORKLOAD_CALC_REG_RACK_DUTY =
            "QueryWorkLoadCalcRepRackDuty";
    static public final String SQL_WORKLOAD_CALC_RACK_DUTY =
            "QueryWorkLoadCalcRackDuty";
    static public final String SQL_WORKLOAD_CALC_PRE_LOAD_DUTY =
            "QueryWorkLoadCalcPreLoadDuty";
    //add by czl
    static public final String SQL_WORKLOAD_CALC_MOVE_LOAD_DUTY =
            "QueryWorkLoadCalcMoveLoadDuty";

    static public final String SQL_CHECKGO2FINISHED = "CheckG02Finished";

    /**
     *  订单补货（前台）
     */
    /*对于无批号生产日期要求的订单补货,该货品有补货单还未决策的数量*/
    //static public final String SQL_QUERYINITSOPATCHQTY = "QueryInitSoPatchQty";
    /*对于无批号生产日期要求的订单补货，检查有多少数量正在进行补货*/
    static public final String SQL_QUERYSOPATCHTRANSQTY =
            "QuerySoPatchTransQty";
    /*对批号生产日期要求的订单补货，该货品有补货单还未决策的数量*/
    static public final String SQL_QUERYLOTREQINITSOPATCHQTY =
            "QueryLotReqInitSoPatchQty";
    /*对批号生产日期要求的订单补货，检查有多少数量正在进行补货*/
    static public final String SQL_QUERYLOTREQSOPATCHTRANSQTY =
            "QueryLotReqSoPatchTransQty";

    //GO3接口库存调整用到的QUERY定义
    static public final String SQL_QUERYSTOCKOFINMV = "QueryStockOfInmv";
    static public final String SQL_QUERYSTOCKOFINMVADJ = "QueryStockOfInmvAdj";
    static public final String SQL_QUERYORGSTOCKOFINMVADJ =
            "QueryOrgStockOfInmvAdj";
    static public final String SQL_QUERYODDSTOCKOFINMVADJ =
            "QueryOddStockOfInmvAdj";

    //出库流转时间基础查询总体分析
    static public final String SQL_PICKTIMEWAVEQUERY = "PicktimeqryWaveQuery";
    //出库流转时间常用查询总体分析
    public static final String SQL_PICKTIMEWAVENORQUERY =
            "PicktimeqryWaveNorQuery";
    //出库流转时间高级查询总体分析
    public static final String SQL_PICKTIMEWAVEADVQUERY =
            "PicktimeqryWaveAdvQuery";
    //出库流转时间基础查询拣选类型分析
    static public final String SQL_PICKTIMEPICKQUERY = "PicktimeqryPickQuery";
    //出库流转时间常用查询拣选类型分析
    public static final String SQL_PICKTIMEPICKNORQUERY =
            "PicktimeqryPickNorQuery";
    //出库流转时间高级查询拣选类型分析
    public static final String SQL_PICKTIMEPICKADVQUERY =
            "PicktimeqryPickAdvQuery";
    // 手工配货
    public static final String SQL_HANDALLOCATEQUERY =
            "QueryHandAllocateStockQty";

    public static final int PROCESS_FLAG_INIT = 0; //初始
    public static final int PROCESS_FLAG_CHECK = 1; //通过校验
    public static final int PROCESS_FLAG_CHECKERROR = 2; //校验失败
    public static final int PROCESS_FLAG_IMPORTERROR = 3; //导入失败
    public static final String EDIS_FEEDBACK_SEQ = "EDIS_FEEDBACK_SEQ"; //接口信息反馈表序列号
    public static final int PROCESS_REASONID_CHECK = 0; //数据校验错误
    public static final int PROCESS_REASONID_IMPORT = 1; //数据导入错误
//用到此几个定义的地方请用TRUCKSTATUS的定义
  public static final long TRUCKSTAUS_STOPUSE = 3; //停用
  public static final long TRUCKSTAUS_USE = 2; //使用
  public static final long TRUCKSTAUS_UNUSE = 1; //空闲

  /**
   * 2016-03-11 lhy 不使用
    public static final long FETCHSTATUS_INVALID = 0; //作废
    public static final long FETCHSTATUS_INPUT = 1; //录入
    public static final long FETCHSTATUS_INIT = 2; //初始
    public static final long FETCHSTATUS_FINISH = 3; //完成
    public static final long FETCHSTATUS_PRE = 4; //预录入确认

    // public static final long FETCHSTATUS_COALITION = 4; //被合并/ /总单 不使用 lwk
     * 
     */
    /**
     * 2016-03-11 lhy
     * 通知单总单状态 作废
     */
//  public static final long FETCHSTATUS_INVALID = 0; //作废
//  /**
//   * 2016-03-11 lhy
//   * 通知单总单状态 录入
//   */
//  public static final long FETCHSTATUS_INPUT = 1; //录入
//  /**
//   * 2016-03-11 lhy
//   * 通知单总单状态 初始
//   */
//  public static final long FETCHSTATUS_INIT = 2; //初始
//  /**
//   * 2016-03-11 lhy
//   * 通知单总单状态 收货完成
//   */
//  public static final long FETCHSTATUS_RG=3; 
//  /**
//   * 2016-03-11 lhy
//   * 通知单总单状态 验收完成
//   */
//  public static final long FETCHSTATUS_CHECK=4; 
//  /**
//   * 2016-03-11 lhy
//   * 通知单总单状态 上架
//   */
//  public static final long FETCHSTATUS_RACK =5; 
  
  
  /**
   * 2016-03-11 lhy 不使用
    public static final long FETCHDTLSTATUS_INVALID = 0; //作废
    public static final long FETCHDTLSTATUS_INPUT = 1; //录入
    //public static final long FETCHDTLSTATUS_INIT = 2; //初始
    public static final long FETCHDTLSTATUS_FINISH = 3; //完成
    public static final long FETCHDTLSTATUS_COALITION = 4; //被合并
    public static final long FETCHDTLSTATUS_ClOSE = 6; //终止

    public static final long FETCHDTLSTATUS_INIT = 2; //初始
    public static final long FETCHDTLSTATUS_RG = 3; //收货完成
    public static final long FETCHDTLSTATUS_CHECK = 4; //验收确认
    public static final long FETCHDTLSTATUS_RACK = 5; //上架
    
    */
  /**
   * 2016-03-11 lhy
   * 通知单细单状态 作废
   */
  public static final long FETCHDTLSTATUS_INVALID = 0; //作废
  /**
   * 2016-03-11 lhy
   * 通知单细单状态 录入
   */
  public static final long FETCHDTLSTATUS_INPUT = 1; //录入
  /**
   * 2016-03-11 lhy
   * 通知单细单状态 初始
   */
  public static final long FETCHDTLSTATUS_INIT = 2; //初始
  /**
   * 2016-03-11 lhy
   * 通知单细单状态 收货完成
   */
  public static final long FETCHDTLSTATUS_RG = 3; //收货完成
  /**
   * 2016-03-11 lhy
   * 通知单细单状态 验收确认
   */
  public static final long FETCHDTLSTATUS_CHECK = 4; //验收确认
  /**
   * 2016-03-11 lhy
   * 通知单细单状态 上架
   */
  public static final long FETCHDTLSTATUS_RACK = 5; //上架
    //送货单状态joe add
    public static final long DELIVERYSTATUS_INITIAL = 1; //初始
    public static final long DELIVERYSTATUS_ATTEMPER = 2; //调度
    public static final long DELIVERYSTATUS_HALT = 3; //挂起
    public static final long DELIVERYSTATUS_DELETE = 4; //删除
    public static final long DELIVERYSTATUS_CONSIGNMENT = 5; //发货
    public static final long DELIVERYSTATUS_TRANSFER = 6; //中转
    public static final long DELIVERYSTATUS_COMPLETE = 7; //完工
    public static final long DELIVERYSTATUS_INPUT = 8; //录入
    public static final long DELIVERYSTATUS_ARRIVAL = 10; //送货达到

    public static final long DELIVERYSTATUS_SPLIT = 9; //拆分

    //送货细单状态
    public static final long DELIVERYDTLSTATUS_INITIAL = 1; //初始
    public static final long DELIVERYDTLSTATUS_ATTEMPER = 2; //调度
    public static final long DELIVERYDTLSTATUS_HALT = 3; //挂起
    public static final long DELIVERYDTLSTATUS_DELETE = 4; //删除
    public static final long DELIVERYDTLSTATUS_CONSIGNMENT = 5; //发货
    public static final long DELIVERYDTLSTATUS_TRANSFER = 6; //中转
    public static final long DELIVERYDTLSTATUS_COMPLETE = 7; //完工

    public static final long DELIVERYDTLSTATUS_SPLIT = 9; //拆分
//装车细单状态 joe add
    //public static final long DISPATCHDTLSTATUS_INITIAL = 1; //初始
    //public static final long DISPATCHDTLSTATUS_AFFIRM = 2; //确认
    //public static final long DISPATCHDTLSTATUS_SHIPMENT = 3; //装车
    //public static final long DISPATCHDTLSTATUS_SEND = 4; //派车
    //public static final long DISPATCHDTLSTATUS_DELETE = 5; //删除
    //public static final long DISPATCHDTLSTATUS_COMPLETE = 6; //完工
    //public static final long DISPATCHDTLSTATUS_HALT = 8; //挂起  //kun
////收货单消息总单状态  jwz add
//  public static final long FETCH_DEPOSE = 0;
//  public static final long FETCHDTL_DEPOSE = 0;

    public static final String QUERYLOCKSO = "QueryLockSo"; //锁住订单
    public static final String SOTRLINEID = "trlineid"; //订单的线路字段
    public static final String ATTEMPERSTATUS = "attemperstatus"; //运输调度字段

    public static final String QUERYROADORDERCOUNT = "queryRoadOrderCount"; //获取路单订单的数目
    public static final String ROADID = "roaddocid"; //路单的ID
    // jwz add

    //送货完工总单装车单状态 lsf add
//  1、初始
//  2、确认
//  3、装车
//  4、派车
//  5、删除
//  6、完工
//  7、失败
//  8、挂起
    public static final long DISPATCHSTATUS_INITIAL = 1; //初始
    public static final long DISPATCHSTATUS_CONFIRMED = 2; //确认
    public static final long DISPATCHSTATUS_LOADTRUCK = 3; //装车
    public static final long DISPATCHSTATUS_ARRANGETRUCK = 4; //派车  （等于“发货”）
    public static final long DISPATCHSTATUS_DELETE = 5; //删除
    public static final long DISPATCHSTATUS_FINISH = 6; //完工
    public static final long DISPATCHSTATUS_FAIL = 7; //失败
    public static final long DISPATCHSTATUS_HALT = 8; //挂起  //kun
    //送货完工细单装车单状态 lsf add
    public static final long DISPATCHDTLSTATUS_INITIAL = 1; //初始
    public static final long DISPATCHDTLSTATUS_CONFIRMED = 2; //确认
    public static final long DISPATCHDTLSTATUS_LOADTRUCK = 3; //装车
    public static final long DISPATCHDTLSTATUS_ARRANGETRUCK = 4; //派车  （等于“发货”）
    public static final long DISPATCHDTLSTATUS_DELETE = 5; //删除
    public static final long DISPATCHDTLSTATUS_FINISH = 6; //完工
    public static final long DISPATCHDTLSTATUS_FAIL = 7; //失败
    public static final long DISPATCHDTLSTATUS_HALT = 8; //挂起  //kun

    //装车单类型 add by tjs on 20080814
    public static final long DISPATCHTYPE_SEND = 1; //1送货
    public static final long DISPATCHTYPE_SELFGET = 2; //2自提

    //货位的DHA状态
    public static final long DHASTATUS_UNUSE = 1; // 空闲
    public static final long DHASTATUS_USED = 2; // 使用

//品检单管理的检验合格
    public static final long QCCHECKRESULT_FINE = 0; // 合格
    public static final long QCCHECKRESULT_UNFINE = 1; // 不合格

    //自动生成送货单
    //按客户送货地址分组
    public static final String QUERYGENDELIVERYCUSTOMGROUP =
            "QueryGenDeliveryCustomGroup";
    public static final String TMS_DELIVERY_SEQ = "TMS_DELIVERY_SEQ";
    public static final String TMS_DELIVERYDTL_SEQ = "TMS_DELIVERYDTL_SEQ";
    public static final long DELIVERYDOCTYPE_SEND = 1; //送货
    public static final long DELIVERYDOCTYPE_GET = 2; //取货
    public static final long ORDERTYPE_SO = 1; //订单
    public static final long ORDERTYPE_HAND = 2; //手工
    public static final long ORDERTYPE_RG = 3; //收货
    public static final long ORDERTYPE_DY = 4; //代运
    public static final String QUERYPROCCUSTOMGROUPORG =
            "QueryProcCustomGroupOrg";
    public static final String QUERYPROCCUSTOMGROUPODD =
            "QueryProcCustomGroupOdd";


    public static final String QUERYSOGENDELIVERYBA = "QuerySoGenDeliveryBA";
    public static final String QUERYPROCCUSTOMGROUPPICK = "QueryProcCustomGroupPickid";

    public static final long TMS_SKU_ODD = 0; //散件的SKU
    public static final long TMS_SKU_SPLIT = -1; //拆分的SKU
    public static final long SYS_PERSON_ID = 0; //系统用户ID

    public static final long STORAGECONDITION_NOR = 1; //常温
    public static final long STORAGECONDITION_COOL = 2; //阴凉
    public static final long STORAGECONDITION_COLD = 3; //冷藏
    public static final long STORAGECONDITION_LD = 7; //冷冻


    //运输系统 作业调度
    public static final String QUERYTASKATMPSAMEDROPPOINT =
            "QueryTaskAtmpSameDroppoint";
    public static final String QUERYTASKATMPROAD = "QueryTaskAtmpRoad";
    public static final String QUERYTASKATMPLINEROAD = "QueryTaskAtmpLineRoad";
    public static final String QUERYTASKATMPLINEDHA = "QueryTaskAtmpLineDHA";
    public static final String QUERYTASKATMPROADVIPCOM =
            "QueryTaskAtmpRoadVipCom";
    public static final String QUERYTASKATMPROADCOMCOUNT =
            "QueryTaskAtmpRoadComCount";
    public static final String QUERYTASKATMPDHACOMCOUNT =
            "QueryTaskAtmpDhaComCount";
    public static final String QUERYTASKATMPCALCSOORGCOUNT =
            "QueryTaskAtmpCalcSoOrgCount";
    public static final String QUERYTASKATMPCALCSOODDCOUNT =
            "QueryTaskAtmpCalcSoOddCount";
    public static final String QUERYCUSTOMRELEASEROAD =
            "QueryCustomReleaseRoad";

    public static final long VIPFLAG_NO = 0; //非重点客户
    public static final long VIPFLAG_YES = 1; //重点客户

    public static final long NEWROADFLAG_NO = 0; //
    public static final long NEWROADFLAG_YES = 1; //客户分路单标志

    public static final String WMS_ROAD_SEQ = "WMS_ROAD_SEQ";

    public static final long DELIVERTYPE_SEND = 1; //1送货
    public static final long DELIVERTYPE_SELFGET = 2; //2自提
    public static final long DELIVERTYPE_THIRDSEND = 3; //3外包

    public static final long ROUTETYPE_NOR = 1; //1、普通
    public static final long ROUTETYPE_SELFGET = 2; //2、自提
    public static final long ROUTETYPE_TRANSFER = 3; //3、中转

    public static final long ROUTESTATUS_NOR = 1; //1、正常
    public static final long ROUTESTATUS_STOP = 0; //0、停用

    //单品管理标志,0否1是
    public static final long SKUFLAG_YES = 1;
    public static final long SKUFLAG_NO = 0;

    //单品管理模式,1出入都管，2只管出
    public static final long SKUMODE_INOUT = 1;
    public static final long SKUMODE_OUT = 2;


    //单品管理颗粒
    public static final long SKUGRANULE_BASICUNIT = 1; //1基本单位
    public static final long SKUGRANULE_BOX = 2; //2箱
    public static final long SKUGRANULE_PALLET = 3; //3托盘

    //单品条码使用 1原来2重新生成
    public static final long SKUBARCODEMODE_OLD = 1;
    public static final long SKUBARCODEMODE_NEW = 2;
    //Skubarcode,需回填标志
    public static final String SKUBARCODE_NEEDFILLBACK = "需回填";
    public static final String SKUBARCODE_NOTBASICUNIT = "颗粒度不是盒";
    public static final String SKUBARCODE_SEQNAME = "SYS_ACCOUNT_SEQ";

    //SIGNFORSTATUS,签收单状态
    public static final long SIGNFORSTATUS_INITIAL = 1; //初始
    public static final long SIGNFORSTATUS_PARTSUC = 2; //部分成功
    public static final long SIGNFORSTATUS_SUCCESS = 3; //成功
    public static final long SIGNFORSTATUS_FAIL = 4; //失败
    public static final long SIGNFORSTATUS_TRANSFER = 5; //中转
    public static final long SIGNFORSTATUS_FEENOTE = 6; //费用录入
    //签收单类型
    public static final long SIGNFORTYPE_TRANSFER = 1; //1、中转签收单
    public static final long SIGNFORTYPE_CUSTOM = 2; //2、客户签收单
    public static final long SIGNFORTYPE_GET = 3; //3 提货签收单

    public static final String QUERYSIGNFORCALCCASE = "QuerySignforCalcCase";
    public static final String QUERYSIGNFORINVOICE = "QuerySignforInvoice";
    public static final String QUERYSIGNFORREPORT = "QuerySignforReport";
    public static final String QUERYSIGNFORSASETTLE = "QuerySignforSasettle";
    public static final String QUERYSIGNFORCALCSPLITMEMO =
            "QuerySignforCalcSplitmemo";

    public static final String QUERYGROUPTRANSPOS = "QueryGroupTranspos";
    public static final String QUERYGROUPCUSTOMSOPOS = "QueryGroupCustomSopos";
    //送货完工
    public static final String QUERYQUERYDGCOMPLETEDISPATCHDTL =
            "QueryDgcompleteDispatchdtl";
    public static final String QUERYTRANSFERSIGNFORDGCOMPLETE =
            "QueryTransferSignforDgcomplete";




    public static final String QUERYDELIVERYGROUPBYDHA =
            "QueryDeliveryGroupByDha";
    public static final String QUERYDISPATCHCALCCASE = "QueryDispatchCalcCase";
    public static final String QUERYDISPATCHGENSIGNFOR =
            "QueryDispatchGenSignfor";
    public static final String QUERYDISPATCHBANDSIGNFOR =
            "QueryDispatchBandSignfor";
    public static final String QUERYDISPATCHDELIVERYGROUP =
            "QueryDispatchDeliveryGroup";
    public static final String QUERYDISPATCHANDDELIVERY =
            "QueryDispatchAndDelivery";
    public static final String QUERYDELIVERYORGDISPGROUP =
            "QueryDeliveryOrgDispGroup";
    public static final String QUERYDISPATCHPRECALCCASE =
            "QueryDispatchPreCalcCase";
    public static final String QUERYDISPATCHPRECALCCASEINFO =
            "QueryDispatchPreCalcCaseInfo"; //在派车调度确认功能中合并装车单中预算装车单中的货品箱数
    //派车调度计算地址数
    public static final String QUERYDISPATCHPRECALCSOPOS =
            "QueryDispatchPreCalcsopos";
    //合并装车单计算地址数
    public static final String QUERYCOALITIONPRECALCSOPOS =
            "QueryCoalitionPreCalcSopos";
    //同车配送取其它送货单
    public static final String QUERYOTHERSAMETRUCKDELIVERYID =
            "QueryOtherSameTruckDeliveryid";
    //同车配送同一装车单下取其它送货单
    public static final String QUERYDISPATCHOTHERSAMETRUCKDELIVERYID =
            "QueryDispatchOtherSameTruckDeliveryid";


    public static final String QUERYNEWORGSOIDINDELIVERY =
            "QueryNewOrgsoidInDelivery";


    //车辆使用状态

    public static final long TRUCKSTATUS_FREE = 1; //空闲
    public static final long TRUCKSTATUS_USE = 2; //使用
    public static final long TRUCKSTATUS_PAUSE = 3; //停用
    public static final long TRUCKSTATUS_DISPATCH = 4; //派车

    public static final long TRANS_FLAG_TAKE = 1; //自提//在收货通知上是要生成送货单，主动派车去提货
    public static final long TRANS_FLAG_TRANS = 2; //运输

    public static final long TRANSFER_FLAG_YES = 1; //是
    public static final long TRANSFER_FLAG_NO = 0; //否
    //装车单单据类型
    public static final long DISPATCH_INPUTTYPE_SELF = 1; //手提
    public static final long DISPATCH_INPUTTYPE_SYSTEM = 2; //系统
    public static final long DISPATCH_INPUTTYPE_TRANS = 3; //中转

    public static final String QUERY_DISPATCHDELIVERY_DISPATCH =
            "QueryDispatchDeliveryDispatch";
    public static final String QUERY_DISPATCHDELIVERY_DELIVERY =
            "QueryDispatchDeliveryDelivery";
    public static final String QUERY_DISPATCHDELIVERY_ROAD =
            "QueryDispatchDeliveryRoad";
    public static final String QUERY_DISPATCHDELIVERY_SO =
            "QueryDispatchDeliverySo";


    public static final long TRANSFER_USEFLAG_START = 1; //启动
    public static final long TRANSFER_USEFLAG_END = 0; //停用

    public static final String PACKAGEUNIT_CASE = "箱";

//送货单中转标志
    public static final long DELIVERY_TRANSFERFLAG_NO = 0; //否
    public static final long DELIVERY_TRANSFERFLAG_YES = 1; //是

    /**已经不要了改成逻辑参数  vincent 2017-01-17
    //商品属性 1正常、2外用、3保健食品、4危险品、5一类麻精、6二类精神
    public static final long GOODSPROP_NOR = 1; //正常
    public static final long GOODSPROP_EXT = 2; //外用
    public static final long GOODSPROP_MIX = 3; //保健食品
    public static final long GOODSPROP_DAN = 4; //危险品
    public static final long GOODSPROP_MJONE = 5; //一类麻精
    public static final long GOODSPROP_MJTWO = 6; //二类精神
    public static final long GOODSPROP_YLQX = 9; //医疗器械
    public static final long GOODSPROP_FOOD = 14; //食品
    */

    //SKU的管理去向标志
    public static final long SKUFLOW_YES = 1; //管
    public static final long SKUFLOW_NO = 0; //不管



    //订单的配货返回标志
    public static final long SO_ALLOCATEBACKFLAG_YES = 1;

    public static final String QUERYDELIVERYBYLABELNO =
            "QueryDeliveryByLabelno"; //根据标签编号查找中转的送货单

    public static final String WAREHOUSEID = "WAREHOUSEID";
    public static final String WAREHOUSENAME = "WAREHOUSENAME";

    public static final String QUERYEXPORTDISPATCH = "QueryExportDispatch";
    public static final String QUERYEXPORTDELIVERY = "QueryExportDelivery";
    public static final String QUERYEXPORTSIGNFOR = "QueryExportSignfor";

    static public final String SQL_QUERYRGPRELOADUNEXPORTROAD =
            "QueryRgPreLoadUnExportRoad";

    static public final String SQL_QUERYFETCHPRELOADUNEXPORTROAD =
            "QueryFetchPreLoadUnExportRoad";
    //删除多余的料箱出库交易查询
    static public final String QUERYDELREPEATTOTEIODOC =
            "QueryDelRepeatToteiodoc";

    static public final String QUERYCOALITIONPRECALCCASE =
            "QueryCoalitionPreCalcCase";

    static public final String QUERYCALCSOTYPECASECOUNT =
            "QueryCalcSotypeCaseCount";

    static public final String QUERYCALCORDERTYPECASECOUNT =
            "QueryCalcOrdertypeCaseCount";
    static public final String QUERYDICTMULTIMSG = "QueryDictMultiMsg";

    static public final String QUERYDELIVERYUNPRELOADPICK =
            "QueryDeliveryUnPreloadPick";
    /*查询订单对应的原件拣选单*/
    static public final String QUERYSOORGPICKDTL = "QuerySoOrgPickdtl";
    /*查询订单对应的散件拣选单*/
    static public final String QUERYSOODDPICKDTL = "QuerySoOddPickdtl";
    /*查询拣选单是否属于别的订单*/
    static public final String QUERYPICKONEOWNER = "QueryPickOneOwner";

    /*计算送货单上的总箱数信息*/
    static public final String QUERYCALCDELIVERYCASE = "QueryCalcDeliveryCase";

    /*查询被删除的装车单对应的车辆的运输任务*/
    static public final String QUERYAFTERDELETEDISPATCHPROCTRUCK =
            "QueryAfterDeleteDispatchProcTruck";
    /*判断路单所在的dha中是否存在已释放的路单*/
    static public final String QUERYDHAHAVERELEASEROAD =
            "QueryDhaHaveReleaseRoad";
    /*查询拆分的送货单对应的送货单*/
    static public final String QUERYSPLITDELIVERY = "QuerySplitDelivery";
    /*查询拆分的送货单对应的订单*/
    static public final String QUERYSPLITDELIVERYSO = "QuerySplitDeliverySo";

    static public final String QUERYSAMEDHADISPATCHDTL =
            "QuerySameDhaDispatchdtl";

    static public final long TRANSPORTMODE_SELF = 0; //自运
    static public final long TRANSPORTMODE_TRUCK = 7; //自运


    static public final long DEFAULT_DHAID = 0; //PTL盘点用

    static public final String QUERYSIGNFORROADIDLIST =
            "QuerySignforRoadidList";

    static public final String QUERYUSETRUCK = "QueryUseTruck";

    static public final long W_CALC_RATE = 1000; //TMS系统重量计算比率（吨：千克）

    static public final long V_CALC_RATE = 100 * 100 * 100; //TMS系统体积计算比率（立方米：立方厘米）


    static public final long TACTICTYPE_ALLOCATE = 1; //策略 分配
    static public final long TACTICTYPE_RELEASE = 2; //策略 分箱
    static public final long TACTICTYPE_RACK = 3; //策略 上架
    static public final long TACTICTYPE_PATCH = 4; //策略 补货
    //检查入库的验收区库存是否都录了单品条码
    static public final String QUERYQCSTOCKSKUBARCODE =
            "QueryQcStockSkubarcode";
    static public final String QUERYRACKSTOCK = "QueryRackStock";

    static public final String QUERYCHECKGOODSSTOCK = "QueryCheckGoodsStock";

    static public final String QUERYGOODSSALESTOCK = "QueryGoodsSaleStock";

    static public final String QUERYALARMGOODSSTOCK = "QueryAlarmGoodsStock";
    static public final String QUERYINVALIDGOODSSTOCK =
            "QueryInvalidGoodsStock"; //检查过期库存add by jzt 20080811

    static public final String QUERYSOSTORETRANSCHECK =
            "QuerySoStoretransCheck";

    static public final String QUERYCALCDELIVERYQTYS = "QueryCalcDeliveryQtys";

    static public final long CONTROLFLAG_NOR = 0; //特殊商品标志：非麻精
    static public final long CONTROLFLAG_MJ = 1; //特殊商品标志：麻精
    static public final long CONTROLFLAG_YM = 2; //特殊商品标志：疫苗

    static public final String QUERY_DISPATCHS_NO_DTL = "QueryDispatchsNoDtl";

    static public final String QUERY_SOBACK_DELIVERY = "QuerySobackDelivery";
    static public final String QUERY_CHECK_SOBACK_DELIVERY =
            "QueryCheckSobackDelivery";
    static public final String QUERY_DHA_SOBACK_DELIVERY =
            "QueryDHASobackDelivery";
    static public final String INSERT_WMS_SO_ALLOCATE_PUTDATA =
            "InsertWmsSoAllocatePutdata";
    //外用周转箱统一纸箱码
    static public final String TOTEBIN_CODE_USEBOX = "0000000";
    //周转箱使用状态
    static public final long TOTEBIN_BETAKE_FREE = 1; //空闲
    static public final long TOTEBIN_BETAKE_TAKED = 2; //使用

    //周转箱状态
    static public final long TOTEBIN_STATUS_PARKED = 0; //停用
    static public final long TOTEBIN_STATUS_NORMALLY = 1; //正常

    public static final String WMS_SO_SEQ = "WMS_SO_SEQ";
    public static final String WMS_SODTL_SEQ = "WMS_SODTL_SEQ";
    //已被合并导出
    static public final long SO_SPLITFLAG_OTHEN = 99; //已被合并导出

    static public final String QUERY_DISPATCHS_SOCOUNT_BY_ORGSOID =
            "QUERY_DISPATCHS_SOCOUNT_BY_ORGSOID";
    static public final String QUERY_DISPATCHS_SOCOUNT_BY_SAMETRUCKFLAG =
            "QUERY_DISPATCHS_SOCOUNT_BY_SAMETRUCKFLAG";

    //取待检区域和待检货位 add by tjs on 20070513
    static public final String SQL_GET_TOBEQUALIFIED_LOC =
            "SqlGetTobeQualifiedLoc";

    //货主
    static public final long CONSIGNOR_GZMPC = 1; //货主：医药公司

    //状态
    static public final long STATUS_NORMAL = 1; //状态：正常
    static public final long STATUS_STOPUSING = 0; //状态：停用

    //同车配送标志 add by tjs on 20070620
    static public final long SAMETRUCKFLAG_NOR = 0; //同车配送标志：非同车配送
    static public final long SAMETRUCKFLAG_SAMETRUCK = 1; //同车配送标志：同车配送

    //疫苗台帐状态
    static public final long BACTERIN_STATUS_INIT = 1; //初始
    static public final long BACTERIN_STATUS_CONFIRM = 2; //确定


    //预收货单状态
    static public final long PRERGSTATUS_INVALID = 0;//作废
    static public final long PRERGSTATUS_INITIAL = 1;//初始
    static public final long PRERGSTATUS_RG = 2;//收货
    static public final long PRERGSTATUS_CONFIRMED = 3;//已验收


    //预收货细单状态
    static public final long PRERGDTLSTATUS_INVALID = 0; //作废
    static public final long PRERGDTLSTATUS_INITIAL = 1; //初始
    static public final long PRERGDTLSTATUS_RG = 2; //收货
    static public final long PRERGDTLSTATUS_CONFIRMED = 3; //已验收

    //上架清单一页打印最多行数
    static public final long RACK_PRT_MAX_ITEM = 8;

    //移库入库单一页打印最多行数
    static public final long MOVE_PRT_MAX_ITEM = 10;

    //上架任务不分品种整托盘停止条件 （8条上架任务单） add by tjs on 20080617
    static public final long RACK_MISSION_PRT_NOT_DIV_PALLET_ITEM_END = 8;

    //上架任务不分品种整箱停止条件 （超过或等于80件） add by tjs on 20080617
    static public final long RACK_MISSION_PRT_NOT_DIV_CASE_CASEQTY_END = 30;

    //货品的推荐仓库储存条件
    static public final long TOWARCONDITION_CW = 1; //常温
    static public final long TOWARCONDITION_YL = 2; //阴凉
    static public final long TOWARCONDITION_SW = 3; //室温
    static public final long TOWARCONDITION_LC = 4; //冷藏
    static public final long TOWARCONDITION_LD = 5; //冷冻

    //货位对应的管理条件属性
    static public final long MJONE_NO = 0;
    static public final long MJONE_YES = 1;
    static public final long MJONE_ALL = 2;
    static public final long MJTWO_NO = 0;
    static public final long MJTWO_YES = 1;
    static public final long MJTWO_ALL = 2;

    //仓库控制标志
    static public final long CASECONTROLFLAG_NO = 1; //不控制
    static public final long CASECONTROLFLAG_CASE = 2; //控制到原件
    static public final long CASECONTROLFLAG_SCATTER = 3; //控制到散件
    static public final long CASECONTROLFLAG_ALL = 4; //原散件都控制

    //货位控制标志
    static public final long LOCCONTROLFLAG_NO = 1; //不控制
    static public final long LOCCONTROLFLAG_CASE = 2; //控制到原件
    static public final long LOCCONTROLFLAG_SCATTER = 3; //控制到散件
    static public final long LOCCONTROLFLAG_ALL = 4; //原散件都控制

    //add by tjs on 20080616
    static public final long PRERG_DIV_GOODS = 1; //分品种
    static public final long PRERG_NOT_DIV_GOODS = 0; //不分品种

    //add by tjs on 20080617
    static public final long LACKFLAG_LACK = 1; //缺货
    static public final long LACKFLAG_NOTLACK = 0; //不缺货

    static public final String QuerySoidByDeliveryid = "QuerySoidByDeliveryid"; //由送货单查询订单ID
    static public final String QueryCallbackmissionBySoid =
            "QueryCallbackmissionBySoid"; //查询是否有回收任务单

    //------------------------------
    //add by booby on 20100308
    static public final long LINESTATUS_INVALID = 0; //作废
    static public final long LINESTATUS_NORMAL = 1; //正常
    //料箱使用状态
    static public final long TOTESTATUS_VACANCY = 0; //空闲
    static public final long TOTESTATUS_USE = 1; //使用

    //进货单类型
    //进货单类型:1进货2进退3进货补差4进退补差5换货6赠品7送样
    static public final short PURTYPE_TYPE_PUR = 1; //进货
    static public final short PURTYPE_TYPE_PURBACK = 2; //进退
    static public final short PURTYPE_TYPE_PURREP = 3; //进货补差
    static public final short PURTYPE_TYPE_PURBACKREP = 4; //进退补差
    static public final short PURTYPE_TYPE_PURCHANGE = 5; //换货
    static public final short PURTYPE_TYPE_PRESENT = 6; //赠品
    static public final short PURTYPE_TYPE_SEND = 7; //送样
    static public final short PURTYPE_TYPE_AGENGMANAGE = 8; //代管
    static public final short PURTYPE_TYPE_AGENGSAL = 9; //代销

    //进货总单状态
    static public final short PURSTATUS_INVALID = 0; //作废
    static public final short PURSTATUS_INIT = 1; //初始
    static public final short PURSTATUS_COMMIT = 2; //确定
    static public final short PURSTATUS_NOPAY = 4; //不付款

    //进货细单状态
    static public final short PURDTLSTATUS_INVALID = 0; //作废
    static public final short PURDTLSTATUS_INIT = 1; //初始
    static public final short PURDTLSTATUS_COMMIT = 2; //确定
    static public final short PURDTLSTATUS_PAY = 3; //已付款
    static public final short PURSDTLTATUS_NOPAY = 4; //不付款

    static public final short GOODSUSESTATUS_PROVIDE = 0; //待定
    static public final short GOODSUSESTATUS_MARKE = 1; //可销
    static public final short GOODSUSESTATUS_NOSAL = 2;//不可销
    static public final short GOODSUSESTATUS_CROSSTOCK = 3;//直送
    static public final short GOODSUSESTATUS_GOODSLOAN = 9;//借出
    
    //进口类型 add vincent 2017-01-17
    static public final long GOODSDIFF_DOMESTIC = 0;//国产
    static public final long GOODSDIFF_IMPORT = 1;//进口
    
    public static final long PICKCHECKMODE_PICKSORT = 1; //根据拣选顺序逐条复核
    public static final long PICKCHECKMODE_BARCODE = 2; //扫描商品条码逐条复核

    public static final long DOUBLECHECKFLAG_NOTCHECK = 0 ; //不复核--双人复核标志
    public static final long DOUBLECHECKFLAG_INOUTCHECK = 1 ; //出入库复核--双人复核标志
    public static final long DOUBLECHECKFLAG_OUTCHECK = 2 ; //出库复核
    public static final long DOUBLECHECKFLAG_INCHECK = 3 ; //入库复核

     public static final long TOTEBINFLAG_NOUSE = 0 ; //库外周转箱标志
     public static final long TOTEBINFLAG_USE = 1 ; //库外周转箱标志

     public static final long BOXUPPRTFLAG_NOUSE = 0 ; //装箱清单打印标志 modify 2010-05-06
     public static final long BOXUPPRTFLAG_USE = 1 ; //装箱清单打印标志

     public static final long SKUSTATUS_USE = 1 ; //正常 SKU状态　modify 2010-05-12
     public static final long SKUSTATUS_STOP = 2 ; //停用 SKU状态　modify 2010-05-12

    //--------------------------------------------------


    static public final long SALTYPE_SALBACK = 2; //销售退货
    static public final long SALTYPE_SALCHANGE = 5; //销购

    static public final long SALSTATUS_INVALID = 0;//作废
    static public final long SALSTATUS_INIT = 1; //初始
    static public final long SALSTATUS_CONFIRM = 2; //确认

    static public final long SALDTLSTATUS_INVALID = 0;//作废
    static public final long SALDTLSTATUS_INIT = 1; //初始
    static public final long SALDTLSTATUS_CONFIRM = 2; //确认

    //工作流状态 workflowstatus   add by next on 20100325
    static public final short WORKFLOW_STATUS_INIT = 0; //草稿
    static public final short WORKFLOW_STATUS_NOCHECK = 1; //待审批
    static public final short WORKFLOW_STATUS_CHECKPASS = 2; //审批通过
    static public final short WORKFLOW_STATUS_NOPASS = 3; //审批未通过

    //add by next on 20100325销换
    static public final long SALEXCHANGESTATUS_INIT = 1; //初始
    static public final long SALEXCHANGESTATUS_CONFIRM = 2; //确认

    static public final long SALEXCHANGEDTLSTATUS_INIT = 1; //初始
    static public final long SALEXCHANGEDTLSTATUS_CONFIRM = 2; //确认

    //养护单状态
    static public final short NURSSTATUS_INVALID = 0; //0作废
    static public final short NURSSTATUS_INITIAL = 1; //初始
    static public final short NURSSTATUS_CONFIRM = 2; //确定

//养护细单状态
    static public final short NURSDTLSTATUS_INVALID = 0; //0作废
    static public final short NURSDTLSTATUS_INITIAL = 1; //初始
    static public final short NURSDTLSTATUS_CONFIRM = 2; //确定

//库存表上的养护结果标志
    static public final short FINISHNURSFLAG_INVALID = 0; //0作废
    static public final short FINISHNURSFLAG_INITIAL = 1; //初始
    static public final short FINISHNURSFLAG_CONFIRM = 2; //确定

    public static final String WMS_NURS_SEQ = "WMS_NURS_SEQ"; //
    public static final String WMS_NURSDTL_SEQ = "WMS_NURSDTL_SEQ"; //
    public static final String WMS_NURSSET_SEQ = "WMS_NURSSET_SEQ";
    public static final String WMS_NURSDOC_SEQ = "WMS_NURSDOC_SEQ"; //
    public static final String WMS_NURSDOC_NO_SEQ = "WMS_NURSDOC_NO_SEQ"; //
    public static final String WMS_NURSDOCDTL_SEQ = "WMS_NURSDOCDTL_SEQ"; //

    static public final short NURSTYPE_EASY_FLAG = 1; //易变养护类型
    static public final short NURSTYPE_INVALIDDATE_FLAG = 2; //近效期养护类型
    static public final short NURSTYPE_NOR_FLAG = 3; //普通品种养护类型
    static public final short NURSTYPE_DAILI_FLAG = 4; //代理品种养护类型
    static public final short NURSTYPE_AUDITING_FLAG = 5; //首营品种养护类型
    static public final short NURSTYPE_NURSPROP_FLAG = 6; //特殊养护属性养护类型

    static public final short QUALITYINFO_OUTWARDQUALIFED = 1; //外观合格
    static public final short QUALITYINFO_UNQUALIFED = 3; //不合格
    static public final short QUALITYINFO_VISUBLEPARTICLEQUALIFED = 2; //可见异物合格
    static public final short QUALITYINFO_UNSALED = 4; //不可销

    static public final String WMS_NURS_AUDITINGFLAG_INVALIDDATE = "WMS_NURS_AUDITINGFLAG_INVALIDDATE";//首营品种过限制时间内自动勾掉,默认是12个月
    static public final String GOODSSTATUS_CANSAL_ID = "GOODSSTATUS_CANSAL_ID";//默认是1

    public static final String WMS_LOT_SEQ = "WMS_LOT_SEQ";
    //退货原因类型
    static public final short REASONTYPE_QUALITY = 1; //质量原因
    static public final short REASONTYPE_ERROR = 2; //差错
    static public final short REASONTYPE_PURCON_EXCUTE = 3; //合同执行原因
    static public final short REASONTYPE_UNSALABLE = 4; //滞销
    static public final short REASONTYPE_OTHER = 9; //其他


    static public final String INSERT_HDI_LABELOUT_SQL =
            "QueryExportHdiByLabelid";


    public static final String EBMS_QUALITYTRACK_SEQ = "EBMS_QUALITYTRACK_SEQ";
    public static final String EBMS_QUALITYTRACKDTL_SEQ = "EBMS_QUALITYTRACKDTL_SEQ";

    public static final int EXPENSIVELEVEL_NOR = 0;//非贵重
    public static final int EXPENSIVELEVEL_ONE = 1;//贵重1级

    public static final short SOINOUTTYPE_NOR = 1;//正常
    public static final short SOINOUTTYPE_CROSSTOCK = 2;//即送
    public static final short SOINOUTTYPE_GOODSLOAN = 3;//借货
    public static final short SOINOUTTYPE_CORRECT = 4;//冲账
    public static final short SOINOUTTYPE_DIRECTSEND = 10;//直调
    public static final short SOINOUTTYPE_OWNERALTER = 5;//货权转移
    
    public static final short POINOUTTYPE_NOR = 1;//正常
    public static final short POINOUTTYPE_CROSSTOCK = 2;//即送
    public static final short POINOUTTYPE_GOODSLOAN = 3;//借货
    public static final short POINOUTTYPE_CORRECT = 4;//冲账
    public static final short POINOUTTYPE_DIRECTSEND = 10;//直调
    public static final short POINOUTTYPE_OWNERALTER = 5;//货权转移
    

    public static final String DEFAULT_DIRECTSENDLOCNO="DEFAULT_DIRECTSENDLOCNO";//默认的越库货位

    public static final short PICKSCOOPSTATUS_STOP = 0;//停用
    public static final short PICKSCOOPSTATUS_NOR = 1;//正式

    public static final long GOMHEFLOW_YES = 1;
    public static final long GOMHEFLOW_NO = 0;

    public static final short TOTEINEXECSTATUS_STOP = 0;
    public static final short TOTEINEXECSTATUS_EXECUTE = 1;

    public static final short MHEDATAFILTER_ALL = 0;//不过滤
    public static final short MHEDATAFILTER_ONLYMHE = 1;//只走输送带
    public static final short MHEDATAFILTER_ONLYHANDWORK = 2;//不走输送带

    public static final short NURSPROP_SPECIALMANAGEMENT = 1;      //特殊管理品种
    public static final short NURSPROP_UNQUALIFIEDADJACENTLOT = 2; //曾出现质量问题品种相邻批号产品
    public static final short NURSPROP_SPECIALSTORAGE = 3;         //特殊储存条件品种
    public static final short NURSPROP_BLOODPRODUCTS = 4;          //血液制品
    public static final short NURSPROP_VACCINES = 5;               //疫苗

    static public final long CONVEYDOCTYPE_OFF = 1; //卸货
    static public final long CONVEYDOCTYPE_UP = 2; //装车

    public static final short QUALITYCHECKSTATUS_CANCEL = 0;
    public static final short QUALITYCHECKSTATUS_INIT = 1;
    public static final short QUALITYCHECKSTATUS_CONFIRM= 2;
    public static final String WMS_QUALITYCHECK_SEQ = "WMS_QUALITYCHECK_SEQ";

    public static final long TIPOBJTYPE_GDS = 1;
    public static final long TIPOBJTYPE_COM = 2;

    public static final long PATCHMODEL_ORG = 1;//整件补货
    public static final long PATCHMODEL_DIS = 2;//散件补货

    public static final String WMS_OUTTOTETRANSBATCHNO_SEQ = "WMS_OUTTOTETRANSBATCHNO_SEQ";
    public static final String WMS_OUTTOTETRANS_SEQ = "WMS_OUTTOTETRANS_SEQ";

    //功能提示管理
    public static final String WMS_FUNCTIP_SEQ="WMS_FUNCTIP_SEQ";

    //验收准则管理
   public static final String WMS_QCRULE_SEQ = "WMS_QCRULE_SEQ";
   
   public static final String TMS_TRANSPORTFEE_SEQ = "TMS_TRANSPORTFEE_SEQ";


   public static final short TIMEOUTFLAG_NO = 0;
   public static final short TIMEOUTFLAG_YES = 1;

   public static final short EXECMODE_TIPS = 1;//只做提示
   public static final short EXECMODE_ALERT = 2;//严格执行

   public static final long PALLETID_DIS = 0;//散件板号

   public static final boolean PALLET_PRIORITY = true;//支持整板优先

   public static final long SHAREMETHOD_IN = 1;//分摊方式 1、入库 2、出库 3、出入库
   public static final long SHAREMETHOD_OUT = 2;
   public static final long SHAREMETHOD_INOUT = 3;

   public static final long TAKEMETHOD_SELFGET = 1;//自提
   public static final long TAKEMETHOD_TRANSIT = 2;//物流公司运输
   
   public static final String WMS_SCANDRUGCODE_PICK = "1";
   public static final String WMS_SCANDRUGCODE_BOXUPERATE = "2";

   public static final String P_SYS_DEFUALT_WARID = "SYS_DEFUALT_WARID";
   public static final String P_SYS_DEFUALT_CONSIGNOR = "SYS_DEFUALT_CONSIGNOR";
   public static final String P_WMS_SO_ORGCHECK = "WMS_SO_ORGCHECK";

   //尽量配货订单，库存为0时，订单处理原则
   public static final String P_WMS_SO_ALLOCATEMAX = "WMS_SO_ALLOCATEMAX";
   public static final long WMS_SO_ALLOCATEMAX_DEL = 0; //删除
   public static final long WMS_SO_ALLOCATEMAX_HALT = 1;//挂起

   public static final String WMS_DRUGCODE_SEQ = "WMS_DRUGCODE_SEQ";

   public static final long LABELNO_LEN = 13;
   public static final long TOTENO_LEN = 9;
   public static final String SYS_DEFAULT_CHECKMANCODE2="SYS_DEFAULT_CHECKMANCODE2";
   public static final String SYS_DEFAULT_RACKMANCODE="SYS_DEFAULT_RACKMANCODE";
   public static final String SYS_DEFAULT_PICKMANCODE="SYS_DEFAULT_PICKMANCODE";
   public static final String SYS_DEFAULT_CONFIRMMANCODE="SYS_DEFAULT_CONFIRMMANCODE";
   public static final String SYS_DEFAULT_CONFIRMMANCODE2="SYS_DEFAULT_CONFIRMMANCODE2";
   public static final String WMS_RACK_LOCID = "WMS_RACK_LOCID";//
   public static final String SYS_DEFAULT_PRELOADMANCODE = "SYS_DEFAULT_PRELOADMANCODE";//
   public static final String P_WMS_RGRACK_STORAGENAME = "WMS_RGRACK_STORAGENAME";//
   public static final String P_WMS_RGRACK_STORAGEID = "WMS_RGRACK_STORAGEID";//
   public static final String WMS_FETCH_CONENDDATE = "WMS_FETCH_CONENDDATE";//
   public static final String WMS_SCANDRUGNODE_SET = "WMS_SCANDRUGNODE_SET";
   
   /**
    * 报表所在文件夹
    */
   public static final String SYS_REPORT_FILE="SYS_REPORT_FILE";
   
   //系统参数，箱化板化后，是否自动生成上架标签条码配置参数
   public static final String P_WMS_RACK_GENLABELNO = "WMS_RACK_GENLABELNO";
   
   //收货返回接口，是否自动生成G02进货调整单接口
   public static final String P_WMS_RG_GENG02 = "WMS_RG_GENG02";
   
   //收货返回接口，自动生成G02进货调整单的默认保管帐
   public static final String P_WMS_RG_GENG02_STORAGEID = "WMS_RG_GENG02_STORAGEID";
   
   //收货返货接口导出的时间点，收货细单状态
   public static final String P_WMS_RG_EXPSTATUS = "WMS_RG_EXPSTATUS";
   
   //配货返货接口导出的时间点，出库订单状态
   public static final String P_WMS_SO_EXPALLOCATE = "WMS_SO_EXPALLOCATE";
   
   //是否支持上架决策算法
   public static final String P_WMS_RACK_RACKDECISIOIN = "WMS_RACK_RACKDECISIOIN";

   //装箱复核的方式(1、按拣选顺序 2、按商品条码)
   public static final String P_WMS_SO_PICKCHECKMODE = "WMS_SO_PICKCHECKMODE";//1、根据拣选顺序逐条复核 2、扫描商品条码逐条复核
   
   //系统是否支持销售逆向流程申请
   public static final String P_WMS_SAL_CONVERSEFLOW = "WMS_SAL_CONVERSEFLOW";
   
 //直送商品状态
   public static final String P_GOODSUSESTATUS_CROSS = "P_GOODSUSESTATUS_CROSS";
   
   public static final String P_SMS_COM = "P_SMS_COM";//短信猫串口编号
   public static final String P_SMS_BAUDRATE = "P_SMS_BAUDRATE";//短信猫工作波特率
   
   public static final short LOCCHANNELSLAYOUT_LEFT = 1;
   public static final short LOCCHANNELSLAYOUT_RIGHT = 2;
   public static final short ZCFLAG_LOC = 2;//策略到货位
   public static final short ZCFLAG_ZONE = 1;//策略到区域
   
   static public final String WMS_TEMPRECORD_SEQ = "WMS_TEMPRECORD_SEQ";//hmj add 20100706
   static public final String WMS_TEMPRECORDDTL_SEQ = "WMS_TEMPRECORDDTL_SEQ";//hmj add 20100706
 
   static public final long TEMPRECORDTYPE_PO = 1;//入库
   static public final long TEMPRECORDTYPE_SO = 2;//了出库
   
   //商品智能分类中的出库数量和出库频次的分类
   static public final String WMS_OUTCOUNTQTYABC_AA="AA";//出库频次A类出库数量A类
   static public final String WMS_OUTCOUNTQTYABC_AB="AB";//出库频次A类出库数量B类
   static public final String WMS_OUTCOUNTQTYABC_AC="AC";//出库频次A类出库数量C类
   static public final String WMS_OUTCOUNTQTYABC_BA="BA";//出库数量B类出库数量A类
   static public final String WMS_OUTCOUNTQTYABC_BB="BB";//出库数量B类出库数量B类
   static public final String WMS_OUTCOUNTQTYABC_BC="BC";//出库数量B类出库数量C类
   static public final String WMS_OUTCOUNTQTYABC_CA="CA";//出库数量C类出库数量A类
   static public final String WMS_OUTCOUNTQTYABC_CB="CB";//出库数量C类出库数量B类
   static public final String WMS_OUTCOUNTQTYABC_CC="CC";//出库数量C类出库数量C类
   
   //楼层工作量统计
   static public final int WMS_FLOORWS_SHSJ=0;//收货上架
   static public final int WMS_FLOORWS_BHSJ=1;//补货上架
   static public final int WMS_FLOORWS_CKJX=2;//出库拣选
   static public final int WMS_FLOORWS_BHJX=3;//补货拣选
   public static final String WMS_AUDITING_TO_NOR_MONTH = "WMS_AUDITING_TO_NOR_MONTH";  //首营到普通品种的月份
   
   public static final String EDIS_LOT_SEQ = "EDIS_LOT_SEQ";
   
   //启用PTL接口标志
   public static final String P_SYS_PTL_USEFLAG = "SYS_PTL_USEFLAG";
   //启动MHE接口标志
   public static final String P_SYS_MHE_USEFLAG = "SYS_MHE_USEFLAG";
   
   public static final String P_WMS_KEEPSTOCK_POINT = "WMS_KEEPSTOCK_POINT";
   
   public static final String P_WMS_RACK_PALLETNO = "WMS_RACK_PALLETNO";
   
   public static final String P_WMS_RACKBIND_SCANNO = "WMS_RACKBIND_SCANNO";
   
   public static final String P_WMS_ALLOCATE_DTLCOUNT = "WMS_ALLOCATE_DTLCOUNT";
   public static final String P_WMS_RELEASE_DTLCOUNT = "WMS_RELEASE_DTLCOUNT";
   public static final String P_WMS_FULLPALLET_ALLOCATEMODE = "WMS_FULLPALLET_ALLOCATEMODE";
   
   public static final String P_BOXUP_INPUTCOST_FLAG = "BOXUP_INPUTCOST_FLAG";
   public static final String P_BOXUP_INPUTCOST_TYPE = "BOXUP_INPUTCOST_TYPE";
   
   public static final short RACKBIND_SCANNO_PRERGNO = 1;
   public static final short RACKBIND_SCANNO_FETCHDTLNO = 2;
   
   //有效期单位
   public static final short TIMEUNIT_YEAR = 1;  //年
   public static final short TIMEUNIT_MONTH = 2;  //月
   public static final short TIMEUNIT_DAY = 3;  //日
   
   public static final short INOUTTYPE_IN = 1;//入库
   public static final short INOUTTYPE_OUT = 0;//出库
   static public final String WMS_CODLDCHIANDOC_SEQ = "WMS_CODLDCHIANDOC_SEQ";
   static public final String WMS_CODLDCHIANDTL_SEQ = "WMS_CODLDCHIANDTL_SEQ";

	public static final String WMS_FAILQUALITYCHECK_SEQ = "WMS_FAILQUALITYCHECK_SEQ";// 不合格品记录序列号
	public static final String WMS_FAILQUALITYCHECKNO_SEQ = "WMS_FAILQUALITYCHECKNO_SEQ";// 不合格品记录序列号
	public static final String WMS_FAILQUALITYCHECKDTL_SEQ = "WMS_FAILQUALITYCHECKDTL_SEQ";// 不合格品记录序列号
	public static final String WMS_FAILQUALITYCHECKDTLNO_SEQ = "WMS_FAILQUALITYCHECKDTLNO_SEQ";// 不合格品记录序列号
	public static final short FAILQCSTATUS_INIT = 1; // 初始
	public static final short FAILQCSTATUS_CONFIRM = 2; // 确认
	public static final short FAILQCTYPE_NOPURBACK = 1;// 不可退
	public static final short FAILQCTYPE_CANPURBACK = 2;// 可退

   
   public static final long STACCTYPE_INIT = 0;			//期初
   public static final long STACCTYPE_PUR = 11;			//采购
   public static final long STACCTYPE_PURBACK = 12;		//采退
   public static final long STACCTYPE_SAL = 21;			//销售
   public static final long STACCTYPE_SALBACK = 22;		//销退
   public static final long STACCTYPE_PRESENTIN = 41;	//赠品入
   public static final long STACCTYPE_PRESENTOUT = 42;	//赠品出
   public static final long STACCTYPE_MOVEIN = 51;		//移库入
   public static final long STACCTYPE_MOVEOUT = 52;		//移库出
   public static final long STACCTYPE_LS = 61;			//报损
   public static final long STACCTYPE_OF = 62;			//报溢
   
   
   //整板区域配货出库逻辑
   public static final long FULLPALLETALLOCATEMODE_CASEEPERMIT = 1; 	//1、允许整托出库(整件够一托盘)，允许整件出库(整件不够一托盘)
   public static final long FULLPALLETALLOCATEMODE_CASEFORBID = 2;		//2、只允许整托出库(整件够一托盘)
   
   public static final long DEFAULT_ALARMDAYS = 0;
   
   
   public static final String WMS_SINGLESTOCK_SEQ="WMS_SINGLESTOCK_SEQ";
   public static final String WMS_CHECKSINGLE_SEQ = "WMS_CHECKSINGLE_SEQ";
   public static final String WMS_ADJSINGLE_SEQ = "WMS_ADJSINGLE_SEQ";
   public static final String WMS_SINGLETRANS_SEQ="WMS_SINGLETRANS_SEQ";
   public static final String WMS_SINGLEDIFF_SEQ = "WMS_SINGLEDIFF_SEQ";
   
	
   public static final long SINGLEOUT_TASKDOCTYPE_TOTENO = 1;
   public static final long SINGLEOUT_TASKDOCTYPE_LABELNO = 2;
   public static final long SINGLEOUT_TASKDOCTYPE_LEND = 3;
   public static final long SINGLEOUT_TASKDOCTYPE_PICKDOCID = 4;
   public static final long SINGLEOUT_TASKDOCTYPE_PICKDTLID = 5;
   public static final long SINGLEOUT_TASKDOCTYPE_OFLSID = 6;
   
   public static final long BIZTYPE_RG = 1;
   public static final long BIZTYPE_SO = 2;
   public static final long BIZTYPE_OFLS = 3;
   public static final long BIZTYPE_LEND = 4;
   
   public static final int SINGLEOPTYPE_MOVELOC = 1;
   public static final int SINGLEOPTYPE_CHKSTOCK = 2;
   
   public static final long SINGLEIN_TASKDOCTYPE_PRERGNO = 1;
   public static final long SINGLEIN_TASKDOCTYPE_RACKNO = 2;
   public static final long SINGLEIN_TASKDOCTYPE_LEND = 3;
   public static final long SINGLEIN_TASKDOCTYPE_RACKID = 4;
   public static final long SINGLEIN_TASKDOCTYPE_OFLSID = 5;
   
   public static final long TASKSOURCE_RACK = 1;
   public static final long TASKSOURCE_PICK = 2;
   
   public static final long SINGLEMODE_NULL = 0;
   public static final long SINGLEMODE_IN = 1;
   public static final long SINGLEMODE_INOUT = 2;
   public static final long SINGLEMODE_OUT = 3;
   
//   public static com.ebig.hidao.sys.Person j3w2est(com.ebig.dao.sys.Person j3w){
//	   com.ebig.hidao.sys.Person est = new com.ebig.hidao.sys.Person();
//       est.setAddress(j3w.getAddress());
//       est.setBarcode(j3w.getBarcode());
//       //est.setBirthDate(j3w.getBirthDate());
//       est.setDeptid(j3w.getDeptid());
//       est.setDeptname(j3w.getDeptname());
//       est.setDeptno(j3w.getDeptno());
//       est.setDuty(j3w.getDuty());
//       est.setEmail1(j3w.getEmail1());
//       est.setEmail2(j3w.getEmail2());
//       est.setEmail3(j3w.getEmail3());
//       est.setEntryid(j3w.getEntryid());
//       est.setGender(j3w.getGender());
//       //est.setIdnumber(j3w.getIdNumber());
//       est.setImpsw(j3w.getImpsw());
//       est.setImuser(j3w.getImuser());
//       est.setJoindate(j3w.getJoindate());
//       est.setLeavedate(j3w.getLeavedate());
//       est.setMemo(j3w.getMemo());
//       est.setMobile(j3w.getMobile());
//       est.setOpcode(j3w.getOpcode());
//       est.setPersonid(j3w.getPersonId());
//       est.setPersonname(j3w.getPersonName());
//       est.setPersonstatus(j3w.getPersonstatus().longValue());
//       est.setPostcode(j3w.getPostcode());
//       est.setQqno(j3w.getQqno());
//       est.setSpell(j3w.getSpell());
//       est.setTel(j3w.getTel());
//
//       return est;
//   }
//
//   public static com.ebig.dao.sys.Person est2j3w(com.ebig.hidao.sys.Person est){
//       com.ebig.dao.sys.Person j3w = new com.ebig.dao.sys.Person();
//       j3w.setAddress(est.getAddress());
//       j3w.setBarcode(est.getBarcode());
//       j3w.setBirthDate(est.getBirthdate());
//       j3w.setDeptid(est.getDeptid());
//       j3w.setDeptname(est.getDeptname());
//       j3w.setDeptno(est.getDeptno());
//       j3w.setDuty(est.getDuty());
//       j3w.setEmail1(est.getEmail1());
//       j3w.setEmail2(est.getEmail2());
//       j3w.setEmail3(est.getEmail3());
//       j3w.setEntryid(est.getEntryid());
//       j3w.setGender(est.getGender());
//       j3w.setIdNumber(est.getIdnumber());
//       j3w.setImpsw(est.getImpsw());
//       j3w.setImuser(est.getImuser());
//       j3w.setJoindate(est.getJoindate());
//       j3w.setLeavedate(est.getLeavedate());
//       j3w.setMemo(est.getMemo());
//       j3w.setMobile(est.getMobile());
//       j3w.setOpcode(est.getOpcode());
//       j3w.setPersonId(est.getPersonid());
//       j3w.setPersonName(est.getPersonname());
//       j3w.setPersonstatus(est.getPersonstatus().shortValue());
//       j3w.setPostcode(est.getPostcode());
//       j3w.setQqno(est.getQqno());
//       j3w.setSpell(est.getSpell());
//       j3w.setTel(est.getTel());
//
//       return j3w;
//   }
//   public static Person getPersonbycode(Session db,String code){
//	   String sql="select t from Person t where t.opcode=:opcode";
//	   Query query=db.createQuery(sql);
//	   query.setString("opcode", code);
//	   Iterator it =query.iterate();
//	   if(it.hasNext()){
//		   return (Person)it.next();
//	   }else
//	   {
//		   return null;
//	   }
//   }
//   
//   public static void LockRowData(Connection conn, String table,String where){
//		Statement st = null;
//		try{
//			StringBuffer sql = new StringBuffer();
//			sql.append(" select * from " + table);
//			sql.append(" where "+where);
//			sql.append(" for update");
//			
//			st = conn.createStatement();
//			
//			st.executeQuery(sql.toString());
//		}
//		catch(Exception ex){
//			throw new RuntimeException(ex);
//		}
//		finally{
//			DbUtils.closeQuietly(st);
//		}
//	}
}
